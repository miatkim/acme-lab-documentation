// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module getValue (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tree,
        dim,
        pos_r,
        ap_return
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [4:0] tree;
input  [3:0] dim;
input  [5:0] pos_r;
output  [11:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [4:0] binPtr_m0_c2_V_address0;
reg    binPtr_m0_c2_V_ce0;
wire   [8:0] binPtr_m0_c2_V_q0;
wire   [3:0] binPtr_m0_c3_V_address0;
reg    binPtr_m0_c3_V_ce0;
wire   [9:0] binPtr_m0_c3_V_q0;
wire   [3:0] binPtr_m0_c4_V_address0;
reg    binPtr_m0_c4_V_ce0;
wire   [4:0] binPtr_m0_c4_V_q0;
wire   [2:0] binPtr_m1_c1_V_address0;
reg    binPtr_m1_c1_V_ce0;
wire   [8:0] binPtr_m1_c1_V_q0;
wire   [3:0] binPtr_m1_c2_V_address0;
reg    binPtr_m1_c2_V_ce0;
wire   [8:0] binPtr_m1_c2_V_q0;
wire   [3:0] binPtr_m1_c3_V_address0;
reg    binPtr_m1_c3_V_ce0;
wire   [9:0] binPtr_m1_c3_V_q0;
wire   [2:0] binPtr_m1_c4_V_address0;
reg    binPtr_m1_c4_V_ce0;
wire   [4:0] binPtr_m1_c4_V_q0;
wire   [2:0] binPtr_m2_c1_V_address0;
reg    binPtr_m2_c1_V_ce0;
wire   [8:0] binPtr_m2_c1_V_q0;
wire   [2:0] binPtr_m2_c2_V_address0;
reg    binPtr_m2_c2_V_ce0;
wire   [8:0] binPtr_m2_c2_V_q0;
wire   [2:0] binPtr_m2_c3_V_address0;
reg    binPtr_m2_c3_V_ce0;
wire   [9:0] binPtr_m2_c3_V_q0;
wire   [2:0] binPtr_m3_c4_V_address0;
reg    binPtr_m3_c4_V_ce0;
wire   [3:0] binPtr_m3_c4_V_q0;
wire   [2:0] binPtr_m4_c2_V_address0;
reg    binPtr_m4_c2_V_ce0;
wire   [8:0] binPtr_m4_c2_V_q0;
wire   [2:0] binPtr_m4_c3_V_address0;
reg    binPtr_m4_c3_V_ce0;
wire   [9:0] binPtr_m4_c3_V_q0;
wire   [2:0] binPtr_m4_c4_V_address0;
reg    binPtr_m4_c4_V_ce0;
wire   [3:0] binPtr_m4_c4_V_q0;
wire   [2:0] binPtr_m5_c1_V_address0;
reg    binPtr_m5_c1_V_ce0;
wire   [7:0] binPtr_m5_c1_V_q0;
wire   [2:0] binPtr_m5_c2_V_address0;
reg    binPtr_m5_c2_V_ce0;
wire   [8:0] binPtr_m5_c2_V_q0;
wire   [2:0] binPtr_m5_c3_V_address0;
reg    binPtr_m5_c3_V_ce0;
wire   [9:0] binPtr_m5_c3_V_q0;
wire   [2:0] binPtr_m6_c3_V_address0;
reg    binPtr_m6_c3_V_ce0;
wire   [9:0] binPtr_m6_c3_V_q0;
wire   [2:0] binPtr_m7_c1_V_address0;
reg    binPtr_m7_c1_V_ce0;
wire   [7:0] binPtr_m7_c1_V_q0;
wire   [2:0] binPtr_m7_c2_V_address0;
reg    binPtr_m7_c2_V_ce0;
wire   [8:0] binPtr_m7_c2_V_q0;
wire   [2:0] binPtr_m7_c3_V_address0;
reg    binPtr_m7_c3_V_ce0;
wire   [9:0] binPtr_m7_c3_V_q0;
wire   [2:0] binPtr_m7_c4_V_address0;
reg    binPtr_m7_c4_V_ce0;
wire   [4:0] binPtr_m7_c4_V_q0;
wire   [2:0] binPtr_m8_c1_V_address0;
reg    binPtr_m8_c1_V_ce0;
wire   [8:0] binPtr_m8_c1_V_q0;
wire   [2:0] binPtr_m8_c2_V_address0;
reg    binPtr_m8_c2_V_ce0;
wire   [8:0] binPtr_m8_c2_V_q0;
wire   [2:0] binPtr_m8_c3_V_address0;
reg    binPtr_m8_c3_V_ce0;
wire   [9:0] binPtr_m8_c3_V_q0;
wire   [2:0] binPtr_m9_c1_V_address0;
reg    binPtr_m9_c1_V_ce0;
wire   [8:0] binPtr_m9_c1_V_q0;
wire   [2:0] binPtr_m9_c2_V_address0;
reg    binPtr_m9_c2_V_ce0;
wire   [8:0] binPtr_m9_c2_V_q0;
wire   [2:0] binPtr_m9_c3_V_address0;
reg    binPtr_m9_c3_V_ce0;
wire   [9:0] binPtr_m9_c3_V_q0;
reg   [5:0] pos_read_reg_1308;
wire   [3:0] dim_read_read_fu_176_p2;
reg   [3:0] dim_read_reg_1334;
reg   [3:0] dim_read_reg_1334_pp0_iter1_reg;
wire   [4:0] tree_read_read_fu_182_p2;
reg   [4:0] tree_read_reg_1338;
reg   [4:0] tree_read_reg_1338_pp0_iter1_reg;
wire   [11:0] tmp_19_fu_835_p6;
reg   [9:0] binPtr_m9_c3_V_load_reg_1487;
reg   [8:0] binPtr_m9_c2_V_load_reg_1492;
reg   [8:0] binPtr_m9_c1_V_load_reg_1497;
wire   [11:0] select_ln185_fu_852_p3;
wire   [11:0] tmp_18_fu_863_p6;
reg   [9:0] binPtr_m8_c3_V_load_reg_1512;
reg   [8:0] binPtr_m8_c2_V_load_reg_1517;
reg   [8:0] binPtr_m8_c1_V_load_reg_1522;
wire   [11:0] tmp_17_fu_880_p6;
reg   [4:0] binPtr_m7_c4_V_load_reg_1532;
reg   [9:0] binPtr_m7_c3_V_load_reg_1537;
reg   [8:0] binPtr_m7_c2_V_load_reg_1542;
reg   [7:0] binPtr_m7_c1_V_load_reg_1547;
wire   [11:0] tmp_16_fu_897_p6;
wire   [11:0] tmp_15_fu_914_p6;
reg   [9:0] binPtr_m6_c3_V_load_reg_1562;
wire   [11:0] tmp_14_fu_931_p5;
wire   [11:0] tmp_13_fu_946_p5;
wire   [11:0] tmp_12_fu_961_p5;
wire   [11:0] tmp_11_fu_976_p6;
reg   [9:0] binPtr_m5_c3_V_load_reg_1587;
reg   [8:0] binPtr_m5_c2_V_load_reg_1592;
reg   [7:0] binPtr_m5_c1_V_load_reg_1597;
wire   [11:0] tmp_10_fu_993_p6;
reg   [3:0] binPtr_m4_c4_V_load_reg_1607;
reg   [9:0] binPtr_m4_c3_V_load_reg_1612;
reg   [8:0] binPtr_m4_c2_V_load_reg_1617;
wire   [11:0] tmp_s_fu_1010_p6;
wire   [11:0] tmp_9_fu_1027_p6;
reg   [3:0] binPtr_m3_c4_V_load_reg_1632;
wire   [11:0] tmp_8_fu_1044_p6;
wire   [11:0] tmp_7_fu_1061_p6;
wire   [11:0] tmp_6_fu_1078_p6;
wire   [11:0] tmp_5_fu_1095_p6;
wire   [11:0] tmp_4_fu_1112_p6;
reg   [9:0] binPtr_m2_c3_V_load_reg_1662;
reg   [8:0] binPtr_m2_c2_V_load_reg_1667;
reg   [8:0] binPtr_m2_c1_V_load_reg_1672;
wire   [11:0] tmp_3_fu_1129_p5;
reg   [4:0] binPtr_m1_c4_V_load_reg_1682;
reg   [9:0] binPtr_m1_c3_V_load_reg_1687;
reg   [8:0] binPtr_m1_c2_V_load_reg_1692;
reg   [8:0] binPtr_m1_c1_V_load_reg_1697;
wire   [11:0] tmp_2_fu_1144_p5;
reg   [4:0] binPtr_m0_c4_V_load_reg_1707;
reg   [9:0] binPtr_m0_c3_V_load_reg_1712;
reg   [8:0] binPtr_m0_c2_V_load_reg_1717;
wire   [11:0] tmp_1_fu_1159_p5;
wire   [11:0] tmp_fu_1174_p6;
reg    ap_block_pp0_stage0_subdone;
reg   [11:0] ap_phi_mux_agg_result_0_phi_fu_557_p122;
wire   [11:0] ap_phi_reg_pp0_iter0_agg_result_0_reg_552;
reg   [11:0] ap_phi_reg_pp0_iter1_agg_result_0_reg_552;
reg   [11:0] ap_phi_reg_pp0_iter2_agg_result_0_reg_552;
wire   [11:0] zext_ln18_1_fu_1296_p1;
wire   [11:0] zext_ln17_1_fu_1300_p1;
wire   [11:0] zext_ln16_1_fu_1304_p1;
wire   [11:0] zext_ln37_1_fu_1280_p1;
wire   [11:0] zext_ln36_1_fu_1284_p1;
wire   [11:0] zext_ln35_1_fu_1288_p1;
wire   [11:0] zext_ln34_1_fu_1292_p1;
wire   [11:0] zext_ln55_1_fu_1268_p1;
wire   [11:0] zext_ln54_1_fu_1272_p1;
wire   [11:0] zext_ln53_1_fu_1276_p1;
wire   [11:0] zext_ln75_1_fu_1263_p1;
wire   [11:0] zext_ln94_1_fu_1247_p1;
wire   [11:0] zext_ln93_1_fu_1252_p1;
wire   [11:0] zext_ln92_1_fu_1256_p1;
wire   [11:0] zext_ln112_1_fu_1232_p1;
wire   [11:0] zext_ln111_1_fu_1236_p1;
wire   [11:0] zext_ln110_1_fu_1240_p1;
wire   [11:0] zext_ln131_1_fu_1228_p1;
wire   [11:0] zext_ln151_1_fu_1212_p1;
wire   [11:0] zext_ln150_1_fu_1216_p1;
wire   [11:0] zext_ln149_1_fu_1220_p1;
wire   [11:0] zext_ln148_1_fu_1224_p1;
wire   [11:0] zext_ln169_1_fu_1200_p1;
wire   [11:0] zext_ln168_1_fu_1204_p1;
wire   [11:0] zext_ln167_1_fu_1208_p1;
wire   [11:0] zext_ln188_1_fu_1188_p1;
wire   [11:0] zext_ln187_1_fu_1192_p1;
wire   [11:0] zext_ln186_1_fu_1196_p1;
wire   [63:0] zext_ln188_fu_692_p1;
wire   [63:0] zext_ln187_fu_697_p1;
wire   [63:0] zext_ln186_fu_702_p1;
wire   [63:0] zext_ln169_fu_707_p1;
wire   [63:0] zext_ln168_fu_712_p1;
wire   [63:0] zext_ln167_fu_717_p1;
wire   [63:0] zext_ln151_fu_722_p1;
wire   [63:0] zext_ln150_fu_727_p1;
wire   [63:0] zext_ln149_fu_732_p1;
wire   [63:0] zext_ln148_fu_737_p1;
wire   [63:0] zext_ln131_fu_742_p1;
wire   [63:0] zext_ln112_fu_747_p1;
wire   [63:0] zext_ln111_fu_752_p1;
wire   [63:0] zext_ln110_fu_757_p1;
wire   [63:0] zext_ln94_fu_762_p1;
wire   [63:0] zext_ln93_fu_767_p1;
wire   [63:0] zext_ln92_fu_772_p1;
wire   [63:0] zext_ln75_fu_777_p1;
wire   [63:0] zext_ln55_fu_782_p1;
wire   [63:0] zext_ln54_fu_787_p1;
wire   [63:0] zext_ln53_fu_792_p1;
wire   [63:0] zext_ln37_fu_797_p1;
wire   [63:0] zext_ln36_fu_802_p1;
wire   [63:0] zext_ln35_fu_807_p1;
wire   [63:0] zext_ln34_fu_812_p1;
wire   [63:0] zext_ln18_fu_817_p1;
wire   [63:0] zext_ln17_fu_822_p1;
wire   [63:0] zext_ln16_fu_827_p1;
wire   [1:0] tmp_19_fu_835_p5;
wire   [0:0] trunc_ln185_fu_849_p1;
wire   [1:0] tmp_18_fu_863_p5;
wire   [1:0] tmp_17_fu_880_p5;
wire   [1:0] tmp_16_fu_897_p5;
wire   [1:0] tmp_15_fu_914_p5;
wire   [1:0] tmp_14_fu_931_p4;
wire   [1:0] tmp_13_fu_946_p4;
wire   [1:0] tmp_12_fu_961_p4;
wire   [1:0] tmp_11_fu_976_p5;
wire   [1:0] tmp_10_fu_993_p5;
wire   [1:0] tmp_s_fu_1010_p5;
wire   [1:0] tmp_9_fu_1027_p5;
wire   [1:0] tmp_8_fu_1044_p5;
wire   [1:0] tmp_7_fu_1061_p5;
wire   [1:0] tmp_6_fu_1078_p5;
wire   [1:0] tmp_5_fu_1095_p5;
wire   [1:0] tmp_4_fu_1112_p5;
wire   [1:0] tmp_3_fu_1129_p4;
wire   [1:0] tmp_2_fu_1144_p4;
wire   [1:0] tmp_1_fu_1159_p4;
wire   [1:0] tmp_fu_1174_p5;
wire  signed [4:0] sext_ln94_fu_1244_p1;
wire  signed [4:0] sext_ln75_fu_1260_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_598;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

getValue_binPtr_mbkb #(
    .DataWidth( 9 ),
    .AddressRange( 18 ),
    .AddressWidth( 5 ))
binPtr_m0_c2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m0_c2_V_address0),
    .ce0(binPtr_m0_c2_V_ce0),
    .q0(binPtr_m0_c2_V_q0)
);

getValue_binPtr_mcud #(
    .DataWidth( 10 ),
    .AddressRange( 15 ),
    .AddressWidth( 4 ))
binPtr_m0_c3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m0_c3_V_address0),
    .ce0(binPtr_m0_c3_V_ce0),
    .q0(binPtr_m0_c3_V_q0)
);

getValue_binPtr_mdEe #(
    .DataWidth( 5 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
binPtr_m0_c4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m0_c4_V_address0),
    .ce0(binPtr_m0_c4_V_ce0),
    .q0(binPtr_m0_c4_V_q0)
);

getValue_binPtr_meOg #(
    .DataWidth( 9 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
binPtr_m1_c1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m1_c1_V_address0),
    .ce0(binPtr_m1_c1_V_ce0),
    .q0(binPtr_m1_c1_V_q0)
);

getValue_binPtr_mfYi #(
    .DataWidth( 9 ),
    .AddressRange( 9 ),
    .AddressWidth( 4 ))
binPtr_m1_c2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m1_c2_V_address0),
    .ce0(binPtr_m1_c2_V_ce0),
    .q0(binPtr_m1_c2_V_q0)
);

getValue_binPtr_mg8j #(
    .DataWidth( 10 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
binPtr_m1_c3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m1_c3_V_address0),
    .ce0(binPtr_m1_c3_V_ce0),
    .q0(binPtr_m1_c3_V_q0)
);

getValue_binPtr_mhbi #(
    .DataWidth( 5 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
binPtr_m1_c4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m1_c4_V_address0),
    .ce0(binPtr_m1_c4_V_ce0),
    .q0(binPtr_m1_c4_V_q0)
);

getValue_binPtr_mibs #(
    .DataWidth( 9 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
binPtr_m2_c1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m2_c1_V_address0),
    .ce0(binPtr_m2_c1_V_ce0),
    .q0(binPtr_m2_c1_V_q0)
);

getValue_binPtr_mjbC #(
    .DataWidth( 9 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
binPtr_m2_c2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m2_c2_V_address0),
    .ce0(binPtr_m2_c2_V_ce0),
    .q0(binPtr_m2_c2_V_q0)
);

getValue_binPtr_mkbM #(
    .DataWidth( 10 ),
    .AddressRange( 7 ),
    .AddressWidth( 3 ))
binPtr_m2_c3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m2_c3_V_address0),
    .ce0(binPtr_m2_c3_V_ce0),
    .q0(binPtr_m2_c3_V_q0)
);

getValue_binPtr_mlbW #(
    .DataWidth( 4 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
binPtr_m3_c4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m3_c4_V_address0),
    .ce0(binPtr_m3_c4_V_ce0),
    .q0(binPtr_m3_c4_V_q0)
);

getValue_binPtr_mmb6 #(
    .DataWidth( 9 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
binPtr_m4_c2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m4_c2_V_address0),
    .ce0(binPtr_m4_c2_V_ce0),
    .q0(binPtr_m4_c2_V_q0)
);

getValue_binPtr_mncg #(
    .DataWidth( 10 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
binPtr_m4_c3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m4_c3_V_address0),
    .ce0(binPtr_m4_c3_V_ce0),
    .q0(binPtr_m4_c3_V_q0)
);

getValue_binPtr_mlbW #(
    .DataWidth( 4 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
binPtr_m4_c4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m4_c4_V_address0),
    .ce0(binPtr_m4_c4_V_ce0),
    .q0(binPtr_m4_c4_V_q0)
);

getValue_binPtr_mpcA #(
    .DataWidth( 8 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
binPtr_m5_c1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m5_c1_V_address0),
    .ce0(binPtr_m5_c1_V_ce0),
    .q0(binPtr_m5_c1_V_q0)
);

getValue_binPtr_mqcK #(
    .DataWidth( 9 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
binPtr_m5_c2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m5_c2_V_address0),
    .ce0(binPtr_m5_c2_V_ce0),
    .q0(binPtr_m5_c2_V_q0)
);

getValue_binPtr_mrcU #(
    .DataWidth( 10 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
binPtr_m5_c3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m5_c3_V_address0),
    .ce0(binPtr_m5_c3_V_ce0),
    .q0(binPtr_m5_c3_V_q0)
);

getValue_binPtr_msc4 #(
    .DataWidth( 10 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
binPtr_m6_c3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m6_c3_V_address0),
    .ce0(binPtr_m6_c3_V_ce0),
    .q0(binPtr_m6_c3_V_q0)
);

getValue_binPtr_mtde #(
    .DataWidth( 8 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
binPtr_m7_c1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m7_c1_V_address0),
    .ce0(binPtr_m7_c1_V_ce0),
    .q0(binPtr_m7_c1_V_q0)
);

getValue_binPtr_mmb6 #(
    .DataWidth( 9 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
binPtr_m7_c2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m7_c2_V_address0),
    .ce0(binPtr_m7_c2_V_ce0),
    .q0(binPtr_m7_c2_V_q0)
);

getValue_binPtr_mvdy #(
    .DataWidth( 10 ),
    .AddressRange( 7 ),
    .AddressWidth( 3 ))
binPtr_m7_c3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m7_c3_V_address0),
    .ce0(binPtr_m7_c3_V_ce0),
    .q0(binPtr_m7_c3_V_q0)
);

getValue_binPtr_mwdI #(
    .DataWidth( 5 ),
    .AddressRange( 7 ),
    .AddressWidth( 3 ))
binPtr_m7_c4_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m7_c4_V_address0),
    .ce0(binPtr_m7_c4_V_ce0),
    .q0(binPtr_m7_c4_V_q0)
);

getValue_binPtr_mxdS #(
    .DataWidth( 9 ),
    .AddressRange( 6 ),
    .AddressWidth( 3 ))
binPtr_m8_c1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m8_c1_V_address0),
    .ce0(binPtr_m8_c1_V_ce0),
    .q0(binPtr_m8_c1_V_q0)
);

getValue_binPtr_myd2 #(
    .DataWidth( 9 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
binPtr_m8_c2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m8_c2_V_address0),
    .ce0(binPtr_m8_c2_V_ce0),
    .q0(binPtr_m8_c2_V_q0)
);

getValue_binPtr_mzec #(
    .DataWidth( 10 ),
    .AddressRange( 7 ),
    .AddressWidth( 3 ))
binPtr_m8_c3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m8_c3_V_address0),
    .ce0(binPtr_m8_c3_V_ce0),
    .q0(binPtr_m8_c3_V_q0)
);

getValue_binPtr_mAem #(
    .DataWidth( 9 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
binPtr_m9_c1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m9_c1_V_address0),
    .ce0(binPtr_m9_c1_V_ce0),
    .q0(binPtr_m9_c1_V_q0)
);

getValue_binPtr_mBew #(
    .DataWidth( 9 ),
    .AddressRange( 5 ),
    .AddressWidth( 3 ))
binPtr_m9_c2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m9_c2_V_address0),
    .ce0(binPtr_m9_c2_V_ce0),
    .q0(binPtr_m9_c2_V_q0)
);

getValue_binPtr_mCeG #(
    .DataWidth( 10 ),
    .AddressRange( 7 ),
    .AddressWidth( 3 ))
binPtr_m9_c3_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(binPtr_m9_c3_V_address0),
    .ce0(binPtr_m9_c3_V_ce0),
    .q0(binPtr_m9_c3_V_q0)
);

fwXbdt_mux_42_12_DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_42_12_DeQ_U1(
    .din0(12'd2),
    .din1(12'd4),
    .din2(12'd7),
    .din3(12'd26),
    .din4(tmp_19_fu_835_p5),
    .dout(tmp_19_fu_835_p6)
);

fwXbdt_mux_42_12_DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_42_12_DeQ_U2(
    .din0(12'd2),
    .din1(12'd4),
    .din2(12'd7),
    .din3(12'd26),
    .din4(tmp_18_fu_863_p5),
    .dout(tmp_18_fu_863_p6)
);

fwXbdt_mux_42_12_DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_42_12_DeQ_U3(
    .din0(12'd1898),
    .din1(12'd2004),
    .din2(12'd2606),
    .din3(12'd2639),
    .din4(tmp_17_fu_880_p5),
    .dout(tmp_17_fu_880_p6)
);

fwXbdt_mux_42_12_DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_42_12_DeQ_U4(
    .din0(12'd1898),
    .din1(12'd1969),
    .din2(12'd2606),
    .din3(12'd2639),
    .din4(tmp_16_fu_897_p5),
    .dout(tmp_16_fu_897_p6)
);

fwXbdt_mux_42_12_DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_42_12_DeQ_U5(
    .din0(12'd2),
    .din1(12'd4),
    .din2(12'd7),
    .din3(12'd26),
    .din4(tmp_15_fu_914_p5),
    .dout(tmp_15_fu_914_p6)
);

fwXbdt_mux_32_12_Ee0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_32_12_Ee0_U6(
    .din0(12'd214),
    .din1(12'd280),
    .din2(12'd355),
    .din3(tmp_14_fu_931_p4),
    .dout(tmp_14_fu_931_p5)
);

fwXbdt_mux_32_12_Ee0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_32_12_Ee0_U7(
    .din0(12'd129),
    .din1(12'd134),
    .din2(12'd173),
    .din3(tmp_13_fu_946_p4),
    .dout(tmp_13_fu_946_p5)
);

fwXbdt_mux_32_12_Ee0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_32_12_Ee0_U8(
    .din0(12'd1898),
    .din1(12'd2606),
    .din2(12'd2639),
    .din3(tmp_12_fu_961_p4),
    .dout(tmp_12_fu_961_p5)
);

fwXbdt_mux_42_12_DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_42_12_DeQ_U9(
    .din0(12'd2),
    .din1(12'd4),
    .din2(12'd7),
    .din3(12'd26),
    .din4(tmp_11_fu_976_p5),
    .dout(tmp_11_fu_976_p6)
);

fwXbdt_mux_42_12_DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_42_12_DeQ_U10(
    .din0(12'd1898),
    .din1(12'd1969),
    .din2(12'd2606),
    .din3(12'd2639),
    .din4(tmp_10_fu_993_p5),
    .dout(tmp_10_fu_993_p6)
);

fwXbdt_mux_42_12_DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_42_12_DeQ_U11(
    .din0(12'd129),
    .din1(12'd134),
    .din2(12'd173),
    .din3(12'd178),
    .din4(tmp_s_fu_1010_p5),
    .dout(tmp_s_fu_1010_p6)
);

fwXbdt_mux_42_12_DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_42_12_DeQ_U12(
    .din0(12'd1898),
    .din1(12'd1969),
    .din2(12'd2606),
    .din3(12'd2639),
    .din4(tmp_9_fu_1027_p5),
    .dout(tmp_9_fu_1027_p6)
);

fwXbdt_mux_42_12_DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_42_12_DeQ_U13(
    .din0(12'd51),
    .din1(12'd163),
    .din2(12'd269),
    .din3(12'd541),
    .din4(tmp_8_fu_1044_p5),
    .dout(tmp_8_fu_1044_p6)
);

fwXbdt_mux_42_12_DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_42_12_DeQ_U14(
    .din0(12'd192),
    .din1(12'd214),
    .din2(12'd355),
    .din3(12'd458),
    .din4(tmp_7_fu_1061_p5),
    .dout(tmp_7_fu_1061_p6)
);

fwXbdt_mux_42_12_DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_42_12_DeQ_U15(
    .din0(12'd129),
    .din1(12'd169),
    .din2(12'd173),
    .din3(12'd178),
    .din4(tmp_6_fu_1078_p5),
    .dout(tmp_6_fu_1078_p6)
);

fwXbdt_mux_42_12_DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_42_12_DeQ_U16(
    .din0(12'd1898),
    .din1(12'd1969),
    .din2(12'd2606),
    .din3(12'd2639),
    .din4(tmp_5_fu_1095_p5),
    .dout(tmp_5_fu_1095_p6)
);

fwXbdt_mux_42_12_DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_42_12_DeQ_U17(
    .din0(12'd2),
    .din1(12'd5),
    .din2(12'd7),
    .din3(12'd26),
    .din4(tmp_4_fu_1112_p5),
    .dout(tmp_4_fu_1112_p6)
);

fwXbdt_mux_32_12_Ee0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_32_12_Ee0_U18(
    .din0(12'd1874),
    .din1(12'd1898),
    .din2(12'd2639),
    .din3(tmp_3_fu_1129_p4),
    .dout(tmp_3_fu_1129_p5)
);

fwXbdt_mux_32_12_Ee0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_32_12_Ee0_U19(
    .din0(12'd1874),
    .din1(12'd1898),
    .din2(12'd2639),
    .din3(tmp_2_fu_1144_p4),
    .dout(tmp_2_fu_1144_p5)
);

fwXbdt_mux_32_12_Ee0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_32_12_Ee0_U20(
    .din0(12'd132),
    .din1(12'd148),
    .din2(12'd171),
    .din3(tmp_1_fu_1159_p4),
    .dout(tmp_1_fu_1159_p5)
);

fwXbdt_mux_42_12_DeQ #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 12 ),
    .din1_WIDTH( 12 ),
    .din2_WIDTH( 12 ),
    .din3_WIDTH( 12 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 12 ))
fwXbdt_mux_42_12_DeQ_U21(
    .din0(12'd1898),
    .din1(12'd1918),
    .din2(12'd1923),
    .din3(12'd2190),
    .din4(tmp_fu_1174_p5),
    .dout(tmp_fu_1174_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((~(dim_read_read_fu_176_p2 == 4'd0) & ~(dim_read_read_fu_176_p2 == 4'd4) & ~(dim_read_read_fu_176_p2 == 4'd1) & ~(dim_read_read_fu_176_p2 == 4'd2) & ~(dim_read_read_fu_176_p2 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (tree_read_read_fu_182_p2 == 5'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(dim_read_read_fu_176_p2 == 4'd0) & ~(dim_read_read_fu_176_p2 == 4'd4) & ~(dim_read_read_fu_176_p2 == 4'd1) & ~(dim_read_read_fu_176_p2 == 4'd2) & ~(dim_read_read_fu_176_p2 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (tree_read_read_fu_182_p2 == 5'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(dim_read_read_fu_176_p2 == 4'd0) & ~(dim_read_read_fu_176_p2 == 4'd4) & ~(dim_read_read_fu_176_p2 == 4'd1) & ~(dim_read_read_fu_176_p2 == 4'd2) & ~(dim_read_read_fu_176_p2 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (tree_read_read_fu_182_p2 == 5'd2) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(dim_read_read_fu_176_p2 == 4'd0) & ~(dim_read_read_fu_176_p2 == 4'd4) & ~(dim_read_read_fu_176_p2 == 4'd1) & ~(dim_read_read_fu_176_p2 == 4'd2) & ~(dim_read_read_fu_176_p2 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (tree_read_read_fu_182_p2 == 5'd3) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(dim_read_read_fu_176_p2 == 4'd0) & ~(dim_read_read_fu_176_p2 == 4'd4) & ~(dim_read_read_fu_176_p2 == 4'd1) & ~(dim_read_read_fu_176_p2 == 4'd2) & ~(dim_read_read_fu_176_p2 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (tree_read_read_fu_182_p2 == 5'd4) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(dim_read_read_fu_176_p2 == 4'd0) & ~(dim_read_read_fu_176_p2 == 4'd4) & ~(dim_read_read_fu_176_p2 == 4'd1) & ~(dim_read_read_fu_176_p2 == 4'd2) & ~(dim_read_read_fu_176_p2 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (tree_read_read_fu_182_p2 == 5'd5) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(dim_read_read_fu_176_p2 == 4'd0) & ~(dim_read_read_fu_176_p2 == 4'd4) & ~(dim_read_read_fu_176_p2 == 4'd1) & ~(dim_read_read_fu_176_p2 == 4'd2) & ~(dim_read_read_fu_176_p2 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (tree_read_read_fu_182_p2 == 5'd6) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(dim_read_read_fu_176_p2 == 4'd0) & ~(dim_read_read_fu_176_p2 == 4'd4) & ~(dim_read_read_fu_176_p2 == 4'd1) & ~(dim_read_read_fu_176_p2 == 4'd2) & ~(dim_read_read_fu_176_p2 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (tree_read_read_fu_182_p2 == 5'd7) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(dim_read_read_fu_176_p2 == 4'd0) & ~(dim_read_read_fu_176_p2 == 4'd4) & ~(dim_read_read_fu_176_p2 == 4'd1) & ~(dim_read_read_fu_176_p2 == 4'd2) & ~(dim_read_read_fu_176_p2 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (tree_read_read_fu_182_p2 == 5'd8) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(dim_read_read_fu_176_p2 == 4'd0) & ~(dim_read_read_fu_176_p2 == 4'd4) & ~(dim_read_read_fu_176_p2 == 4'd1) & ~(dim_read_read_fu_176_p2 == 4'd2) & ~(dim_read_read_fu_176_p2 == 4'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (tree_read_read_fu_182_p2 == 5'd9) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_phi_reg_pp0_iter1_agg_result_0_reg_552 <= 12'd0;
    end else if ((~(tree_read_read_fu_182_p2 == 5'd0) & ~(tree_read_read_fu_182_p2 == 5'd1) & ~(tree_read_read_fu_182_p2 == 5'd2) & ~(tree_read_read_fu_182_p2 == 5'd3) & ~(tree_read_read_fu_182_p2 == 5'd4) & ~(tree_read_read_fu_182_p2 == 5'd5) & ~(tree_read_read_fu_182_p2 == 5'd6) & ~(tree_read_read_fu_182_p2 == 5'd7) & ~(tree_read_read_fu_182_p2 == 5'd8) & ~(tree_read_read_fu_182_p2 == 5'd9) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_agg_result_0_reg_552 <= 12'd4094;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_agg_result_0_reg_552 <= ap_phi_reg_pp0_iter0_agg_result_0_reg_552;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_598)) begin
        if (((tree_read_reg_1338 == 5'd9) & (dim_read_reg_1334 == 4'd0))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= select_ln185_fu_852_p3;
        end else if (((tree_read_reg_1338 == 5'd9) & (dim_read_reg_1334 == 4'd4))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_19_fu_835_p6;
        end else if (((tree_read_reg_1338 == 5'd8) & (dim_read_reg_1334 == 4'd0))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_17_fu_880_p6;
        end else if (((tree_read_reg_1338 == 5'd8) & (dim_read_reg_1334 == 4'd4))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_18_fu_863_p6;
        end else if (((tree_read_reg_1338 == 5'd7) & (dim_read_reg_1334 == 4'd0))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_16_fu_897_p6;
        end else if (((tree_read_reg_1338 == 5'd6) & (dim_read_reg_1334 == 4'd0))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_12_fu_961_p5;
        end else if (((tree_read_reg_1338 == 5'd6) & (dim_read_reg_1334 == 4'd1))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_13_fu_946_p5;
        end else if (((tree_read_reg_1338 == 5'd6) & (dim_read_reg_1334 == 4'd2))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_14_fu_931_p5;
        end else if (((tree_read_reg_1338 == 5'd6) & (dim_read_reg_1334 == 4'd4))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_15_fu_914_p6;
        end else if (((tree_read_reg_1338 == 5'd5) & (dim_read_reg_1334 == 4'd0))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_10_fu_993_p6;
        end else if (((tree_read_reg_1338 == 5'd5) & (dim_read_reg_1334 == 4'd4))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_11_fu_976_p6;
        end else if (((tree_read_reg_1338 == 5'd4) & (dim_read_reg_1334 == 4'd0))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_9_fu_1027_p6;
        end else if (((tree_read_reg_1338 == 5'd4) & (dim_read_reg_1334 == 4'd1))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_s_fu_1010_p6;
        end else if (((tree_read_reg_1338 == 5'd3) & (dim_read_reg_1334 == 4'd0))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_5_fu_1095_p6;
        end else if (((tree_read_reg_1338 == 5'd3) & (dim_read_reg_1334 == 4'd1))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_6_fu_1078_p6;
        end else if (((tree_read_reg_1338 == 5'd3) & (dim_read_reg_1334 == 4'd2))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_7_fu_1061_p6;
        end else if (((tree_read_reg_1338 == 5'd3) & (dim_read_reg_1334 == 4'd3))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_8_fu_1044_p6;
        end else if (((tree_read_reg_1338 == 5'd2) & (dim_read_reg_1334 == 4'd0))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_3_fu_1129_p5;
        end else if (((tree_read_reg_1338 == 5'd2) & (dim_read_reg_1334 == 4'd4))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_4_fu_1112_p6;
        end else if (((tree_read_reg_1338 == 5'd1) & (dim_read_reg_1334 == 4'd0))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_2_fu_1144_p5;
        end else if (((tree_read_reg_1338 == 5'd0) & (dim_read_reg_1334 == 4'd0))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_fu_1174_p6;
        end else if (((tree_read_reg_1338 == 5'd0) & (dim_read_reg_1334 == 4'd1))) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= tmp_1_fu_1159_p5;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter2_agg_result_0_reg_552 <= ap_phi_reg_pp0_iter1_agg_result_0_reg_552;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd0) & (dim_read_reg_1334 == 4'd2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m0_c2_V_load_reg_1717 <= binPtr_m0_c2_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd0) & (dim_read_reg_1334 == 4'd3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m0_c3_V_load_reg_1712 <= binPtr_m0_c3_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd0) & (dim_read_reg_1334 == 4'd4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m0_c4_V_load_reg_1707 <= binPtr_m0_c4_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd1) & (dim_read_reg_1334 == 4'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m1_c1_V_load_reg_1697 <= binPtr_m1_c1_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd1) & (dim_read_reg_1334 == 4'd2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m1_c2_V_load_reg_1692 <= binPtr_m1_c2_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd1) & (dim_read_reg_1334 == 4'd3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m1_c3_V_load_reg_1687 <= binPtr_m1_c3_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd1) & (dim_read_reg_1334 == 4'd4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m1_c4_V_load_reg_1682 <= binPtr_m1_c4_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd2) & (dim_read_reg_1334 == 4'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m2_c1_V_load_reg_1672 <= binPtr_m2_c1_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd2) & (dim_read_reg_1334 == 4'd2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m2_c2_V_load_reg_1667 <= binPtr_m2_c2_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd2) & (dim_read_reg_1334 == 4'd3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m2_c3_V_load_reg_1662 <= binPtr_m2_c3_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd3) & (dim_read_reg_1334 == 4'd4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m3_c4_V_load_reg_1632 <= binPtr_m3_c4_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd4) & (dim_read_reg_1334 == 4'd2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m4_c2_V_load_reg_1617 <= binPtr_m4_c2_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd4) & (dim_read_reg_1334 == 4'd3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m4_c3_V_load_reg_1612 <= binPtr_m4_c3_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd4) & (dim_read_reg_1334 == 4'd4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m4_c4_V_load_reg_1607 <= binPtr_m4_c4_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd5) & (dim_read_reg_1334 == 4'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m5_c1_V_load_reg_1597 <= binPtr_m5_c1_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd5) & (dim_read_reg_1334 == 4'd2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m5_c2_V_load_reg_1592 <= binPtr_m5_c2_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd5) & (dim_read_reg_1334 == 4'd3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m5_c3_V_load_reg_1587 <= binPtr_m5_c3_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd6) & (dim_read_reg_1334 == 4'd3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m6_c3_V_load_reg_1562 <= binPtr_m6_c3_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd7) & (dim_read_reg_1334 == 4'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m7_c1_V_load_reg_1547 <= binPtr_m7_c1_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd7) & (dim_read_reg_1334 == 4'd2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m7_c2_V_load_reg_1542 <= binPtr_m7_c2_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd7) & (dim_read_reg_1334 == 4'd3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m7_c3_V_load_reg_1537 <= binPtr_m7_c3_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd7) & (dim_read_reg_1334 == 4'd4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m7_c4_V_load_reg_1532 <= binPtr_m7_c4_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd8) & (dim_read_reg_1334 == 4'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m8_c1_V_load_reg_1522 <= binPtr_m8_c1_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd8) & (dim_read_reg_1334 == 4'd2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m8_c2_V_load_reg_1517 <= binPtr_m8_c2_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd8) & (dim_read_reg_1334 == 4'd3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m8_c3_V_load_reg_1512 <= binPtr_m8_c3_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd9) & (dim_read_reg_1334 == 4'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m9_c1_V_load_reg_1497 <= binPtr_m9_c1_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd9) & (dim_read_reg_1334 == 4'd2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m9_c2_V_load_reg_1492 <= binPtr_m9_c2_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tree_read_reg_1338 == 5'd9) & (dim_read_reg_1334 == 4'd3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m9_c3_V_load_reg_1487 <= binPtr_m9_c3_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        dim_read_reg_1334 <= dim;
        dim_read_reg_1334_pp0_iter1_reg <= dim_read_reg_1334;
        pos_read_reg_1308 <= pos_r;
        tree_read_reg_1338 <= tree;
        tree_read_reg_1338_pp0_iter1_reg <= tree_read_reg_1338;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((tree_read_reg_1338_pp0_iter1_reg == 5'd9) & (dim_read_reg_1334_pp0_iter1_reg == 4'd1))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln186_1_fu_1196_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd9) & (dim_read_reg_1334_pp0_iter1_reg == 4'd2))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln187_1_fu_1192_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd9) & (dim_read_reg_1334_pp0_iter1_reg == 4'd3))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln188_1_fu_1188_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd8) & (dim_read_reg_1334_pp0_iter1_reg == 4'd1))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln167_1_fu_1208_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd8) & (dim_read_reg_1334_pp0_iter1_reg == 4'd2))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln168_1_fu_1204_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd8) & (dim_read_reg_1334_pp0_iter1_reg == 4'd3))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln169_1_fu_1200_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd7) & (dim_read_reg_1334_pp0_iter1_reg == 4'd1))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln148_1_fu_1224_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd7) & (dim_read_reg_1334_pp0_iter1_reg == 4'd2))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln149_1_fu_1220_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd7) & (dim_read_reg_1334_pp0_iter1_reg == 4'd3))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln150_1_fu_1216_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd7) & (dim_read_reg_1334_pp0_iter1_reg == 4'd4))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln151_1_fu_1212_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd6) & (dim_read_reg_1334_pp0_iter1_reg == 4'd3))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln131_1_fu_1228_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd5) & (dim_read_reg_1334_pp0_iter1_reg == 4'd1))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln110_1_fu_1240_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd5) & (dim_read_reg_1334_pp0_iter1_reg == 4'd2))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln111_1_fu_1236_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd5) & (dim_read_reg_1334_pp0_iter1_reg == 4'd3))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln112_1_fu_1232_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd4) & (dim_read_reg_1334_pp0_iter1_reg == 4'd2))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln92_1_fu_1256_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd4) & (dim_read_reg_1334_pp0_iter1_reg == 4'd3))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln93_1_fu_1252_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd4) & (dim_read_reg_1334_pp0_iter1_reg == 4'd4))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln94_1_fu_1247_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd3) & (dim_read_reg_1334_pp0_iter1_reg == 4'd4))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln75_1_fu_1263_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd2) & (dim_read_reg_1334_pp0_iter1_reg == 4'd1))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln53_1_fu_1276_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd2) & (dim_read_reg_1334_pp0_iter1_reg == 4'd2))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln54_1_fu_1272_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd2) & (dim_read_reg_1334_pp0_iter1_reg == 4'd3))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln55_1_fu_1268_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd1) & (dim_read_reg_1334_pp0_iter1_reg == 4'd1))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln34_1_fu_1292_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd1) & (dim_read_reg_1334_pp0_iter1_reg == 4'd2))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln35_1_fu_1288_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd1) & (dim_read_reg_1334_pp0_iter1_reg == 4'd3))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln36_1_fu_1284_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd1) & (dim_read_reg_1334_pp0_iter1_reg == 4'd4))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln37_1_fu_1280_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd0) & (dim_read_reg_1334_pp0_iter1_reg == 4'd2))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln16_1_fu_1304_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd0) & (dim_read_reg_1334_pp0_iter1_reg == 4'd3))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln17_1_fu_1300_p1;
    end else if (((tree_read_reg_1338_pp0_iter1_reg == 5'd0) & (dim_read_reg_1334_pp0_iter1_reg == 4'd4))) begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = zext_ln18_1_fu_1296_p1;
    end else begin
        ap_phi_mux_agg_result_0_phi_fu_557_p122 = ap_phi_reg_pp0_iter2_agg_result_0_reg_552;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m0_c2_V_ce0 = 1'b1;
    end else begin
        binPtr_m0_c2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m0_c3_V_ce0 = 1'b1;
    end else begin
        binPtr_m0_c3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m0_c4_V_ce0 = 1'b1;
    end else begin
        binPtr_m0_c4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m1_c1_V_ce0 = 1'b1;
    end else begin
        binPtr_m1_c1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m1_c2_V_ce0 = 1'b1;
    end else begin
        binPtr_m1_c2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m1_c3_V_ce0 = 1'b1;
    end else begin
        binPtr_m1_c3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m1_c4_V_ce0 = 1'b1;
    end else begin
        binPtr_m1_c4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m2_c1_V_ce0 = 1'b1;
    end else begin
        binPtr_m2_c1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m2_c2_V_ce0 = 1'b1;
    end else begin
        binPtr_m2_c2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m2_c3_V_ce0 = 1'b1;
    end else begin
        binPtr_m2_c3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m3_c4_V_ce0 = 1'b1;
    end else begin
        binPtr_m3_c4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m4_c2_V_ce0 = 1'b1;
    end else begin
        binPtr_m4_c2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m4_c3_V_ce0 = 1'b1;
    end else begin
        binPtr_m4_c3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m4_c4_V_ce0 = 1'b1;
    end else begin
        binPtr_m4_c4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m5_c1_V_ce0 = 1'b1;
    end else begin
        binPtr_m5_c1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m5_c2_V_ce0 = 1'b1;
    end else begin
        binPtr_m5_c2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m5_c3_V_ce0 = 1'b1;
    end else begin
        binPtr_m5_c3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m6_c3_V_ce0 = 1'b1;
    end else begin
        binPtr_m6_c3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m7_c1_V_ce0 = 1'b1;
    end else begin
        binPtr_m7_c1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m7_c2_V_ce0 = 1'b1;
    end else begin
        binPtr_m7_c2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m7_c3_V_ce0 = 1'b1;
    end else begin
        binPtr_m7_c3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m7_c4_V_ce0 = 1'b1;
    end else begin
        binPtr_m7_c4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m8_c1_V_ce0 = 1'b1;
    end else begin
        binPtr_m8_c1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m8_c2_V_ce0 = 1'b1;
    end else begin
        binPtr_m8_c2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m8_c3_V_ce0 = 1'b1;
    end else begin
        binPtr_m8_c3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m9_c1_V_ce0 = 1'b1;
    end else begin
        binPtr_m9_c1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m9_c2_V_ce0 = 1'b1;
    end else begin
        binPtr_m9_c2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        binPtr_m9_c3_V_ce0 = 1'b1;
    end else begin
        binPtr_m9_c3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_598 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_phi_reg_pp0_iter0_agg_result_0_reg_552 = 'bx;

assign ap_return = ap_phi_mux_agg_result_0_phi_fu_557_p122;

assign binPtr_m0_c2_V_address0 = zext_ln16_fu_827_p1;

assign binPtr_m0_c3_V_address0 = zext_ln17_fu_822_p1;

assign binPtr_m0_c4_V_address0 = zext_ln18_fu_817_p1;

assign binPtr_m1_c1_V_address0 = zext_ln34_fu_812_p1;

assign binPtr_m1_c2_V_address0 = zext_ln35_fu_807_p1;

assign binPtr_m1_c3_V_address0 = zext_ln36_fu_802_p1;

assign binPtr_m1_c4_V_address0 = zext_ln37_fu_797_p1;

assign binPtr_m2_c1_V_address0 = zext_ln53_fu_792_p1;

assign binPtr_m2_c2_V_address0 = zext_ln54_fu_787_p1;

assign binPtr_m2_c3_V_address0 = zext_ln55_fu_782_p1;

assign binPtr_m3_c4_V_address0 = zext_ln75_fu_777_p1;

assign binPtr_m4_c2_V_address0 = zext_ln92_fu_772_p1;

assign binPtr_m4_c3_V_address0 = zext_ln93_fu_767_p1;

assign binPtr_m4_c4_V_address0 = zext_ln94_fu_762_p1;

assign binPtr_m5_c1_V_address0 = zext_ln110_fu_757_p1;

assign binPtr_m5_c2_V_address0 = zext_ln111_fu_752_p1;

assign binPtr_m5_c3_V_address0 = zext_ln112_fu_747_p1;

assign binPtr_m6_c3_V_address0 = zext_ln131_fu_742_p1;

assign binPtr_m7_c1_V_address0 = zext_ln148_fu_737_p1;

assign binPtr_m7_c2_V_address0 = zext_ln149_fu_732_p1;

assign binPtr_m7_c3_V_address0 = zext_ln150_fu_727_p1;

assign binPtr_m7_c4_V_address0 = zext_ln151_fu_722_p1;

assign binPtr_m8_c1_V_address0 = zext_ln167_fu_717_p1;

assign binPtr_m8_c2_V_address0 = zext_ln168_fu_712_p1;

assign binPtr_m8_c3_V_address0 = zext_ln169_fu_707_p1;

assign binPtr_m9_c1_V_address0 = zext_ln186_fu_702_p1;

assign binPtr_m9_c2_V_address0 = zext_ln187_fu_697_p1;

assign binPtr_m9_c3_V_address0 = zext_ln188_fu_692_p1;

assign dim_read_read_fu_176_p2 = dim;

assign select_ln185_fu_852_p3 = ((trunc_ln185_fu_849_p1[0:0] === 1'b1) ? 12'd2639 : 12'd1898);

assign sext_ln75_fu_1260_p1 = $signed(binPtr_m3_c4_V_load_reg_1632);

assign sext_ln94_fu_1244_p1 = $signed(binPtr_m4_c4_V_load_reg_1607);

assign tmp_10_fu_993_p5 = pos_read_reg_1308[1:0];

assign tmp_11_fu_976_p5 = pos_read_reg_1308[1:0];

assign tmp_12_fu_961_p4 = pos_read_reg_1308[1:0];

assign tmp_13_fu_946_p4 = pos_read_reg_1308[1:0];

assign tmp_14_fu_931_p4 = pos_read_reg_1308[1:0];

assign tmp_15_fu_914_p5 = pos_read_reg_1308[1:0];

assign tmp_16_fu_897_p5 = pos_read_reg_1308[1:0];

assign tmp_17_fu_880_p5 = pos_read_reg_1308[1:0];

assign tmp_18_fu_863_p5 = pos_read_reg_1308[1:0];

assign tmp_19_fu_835_p5 = pos_read_reg_1308[1:0];

assign tmp_1_fu_1159_p4 = pos_read_reg_1308[1:0];

assign tmp_2_fu_1144_p4 = pos_read_reg_1308[1:0];

assign tmp_3_fu_1129_p4 = pos_read_reg_1308[1:0];

assign tmp_4_fu_1112_p5 = pos_read_reg_1308[1:0];

assign tmp_5_fu_1095_p5 = pos_read_reg_1308[1:0];

assign tmp_6_fu_1078_p5 = pos_read_reg_1308[1:0];

assign tmp_7_fu_1061_p5 = pos_read_reg_1308[1:0];

assign tmp_8_fu_1044_p5 = pos_read_reg_1308[1:0];

assign tmp_9_fu_1027_p5 = pos_read_reg_1308[1:0];

assign tmp_fu_1174_p5 = pos_read_reg_1308[1:0];

assign tmp_s_fu_1010_p5 = pos_read_reg_1308[1:0];

assign tree_read_read_fu_182_p2 = tree;

assign trunc_ln185_fu_849_p1 = pos_read_reg_1308[0:0];

assign zext_ln110_1_fu_1240_p1 = binPtr_m5_c1_V_load_reg_1597;

assign zext_ln110_fu_757_p1 = pos_r;

assign zext_ln111_1_fu_1236_p1 = binPtr_m5_c2_V_load_reg_1592;

assign zext_ln111_fu_752_p1 = pos_r;

assign zext_ln112_1_fu_1232_p1 = binPtr_m5_c3_V_load_reg_1587;

assign zext_ln112_fu_747_p1 = pos_r;

assign zext_ln131_1_fu_1228_p1 = binPtr_m6_c3_V_load_reg_1562;

assign zext_ln131_fu_742_p1 = pos_r;

assign zext_ln148_1_fu_1224_p1 = binPtr_m7_c1_V_load_reg_1547;

assign zext_ln148_fu_737_p1 = pos_r;

assign zext_ln149_1_fu_1220_p1 = binPtr_m7_c2_V_load_reg_1542;

assign zext_ln149_fu_732_p1 = pos_r;

assign zext_ln150_1_fu_1216_p1 = binPtr_m7_c3_V_load_reg_1537;

assign zext_ln150_fu_727_p1 = pos_r;

assign zext_ln151_1_fu_1212_p1 = binPtr_m7_c4_V_load_reg_1532;

assign zext_ln151_fu_722_p1 = pos_r;

assign zext_ln167_1_fu_1208_p1 = binPtr_m8_c1_V_load_reg_1522;

assign zext_ln167_fu_717_p1 = pos_r;

assign zext_ln168_1_fu_1204_p1 = binPtr_m8_c2_V_load_reg_1517;

assign zext_ln168_fu_712_p1 = pos_r;

assign zext_ln169_1_fu_1200_p1 = binPtr_m8_c3_V_load_reg_1512;

assign zext_ln169_fu_707_p1 = pos_r;

assign zext_ln16_1_fu_1304_p1 = binPtr_m0_c2_V_load_reg_1717;

assign zext_ln16_fu_827_p1 = pos_r;

assign zext_ln17_1_fu_1300_p1 = binPtr_m0_c3_V_load_reg_1712;

assign zext_ln17_fu_822_p1 = pos_r;

assign zext_ln186_1_fu_1196_p1 = binPtr_m9_c1_V_load_reg_1497;

assign zext_ln186_fu_702_p1 = pos_r;

assign zext_ln187_1_fu_1192_p1 = binPtr_m9_c2_V_load_reg_1492;

assign zext_ln187_fu_697_p1 = pos_r;

assign zext_ln188_1_fu_1188_p1 = binPtr_m9_c3_V_load_reg_1487;

assign zext_ln188_fu_692_p1 = pos_r;

assign zext_ln18_1_fu_1296_p1 = binPtr_m0_c4_V_load_reg_1707;

assign zext_ln18_fu_817_p1 = pos_r;

assign zext_ln34_1_fu_1292_p1 = binPtr_m1_c1_V_load_reg_1697;

assign zext_ln34_fu_812_p1 = pos_r;

assign zext_ln35_1_fu_1288_p1 = binPtr_m1_c2_V_load_reg_1692;

assign zext_ln35_fu_807_p1 = pos_r;

assign zext_ln36_1_fu_1284_p1 = binPtr_m1_c3_V_load_reg_1687;

assign zext_ln36_fu_802_p1 = pos_r;

assign zext_ln37_1_fu_1280_p1 = binPtr_m1_c4_V_load_reg_1682;

assign zext_ln37_fu_797_p1 = pos_r;

assign zext_ln53_1_fu_1276_p1 = binPtr_m2_c1_V_load_reg_1672;

assign zext_ln53_fu_792_p1 = pos_r;

assign zext_ln54_1_fu_1272_p1 = binPtr_m2_c2_V_load_reg_1667;

assign zext_ln54_fu_787_p1 = pos_r;

assign zext_ln55_1_fu_1268_p1 = binPtr_m2_c3_V_load_reg_1662;

assign zext_ln55_fu_782_p1 = pos_r;

assign zext_ln75_1_fu_1263_p1 = $unsigned(sext_ln75_fu_1260_p1);

assign zext_ln75_fu_777_p1 = pos_r;

assign zext_ln92_1_fu_1256_p1 = binPtr_m4_c2_V_load_reg_1617;

assign zext_ln92_fu_772_p1 = pos_r;

assign zext_ln93_1_fu_1252_p1 = binPtr_m4_c3_V_load_reg_1612;

assign zext_ln93_fu_767_p1 = pos_r;

assign zext_ln94_1_fu_1247_p1 = $unsigned(sext_ln94_fu_1244_p1);

assign zext_ln94_fu_762_p1 = pos_r;

endmodule //getValue
