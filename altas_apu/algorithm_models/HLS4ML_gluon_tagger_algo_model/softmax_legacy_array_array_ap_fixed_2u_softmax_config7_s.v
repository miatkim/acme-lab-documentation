// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module softmax_legacy_array_array_ap_fixed_2u_softmax_config7_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_V_data_0_V_dout,
        data_V_data_0_V_empty_n,
        data_V_data_0_V_read,
        data_V_data_1_V_dout,
        data_V_data_1_V_empty_n,
        data_V_data_1_V_read,
        res_V_data_0_V_TREADY,
        res_V_data_0_V_TDATA,
        res_V_data_0_V_TVALID,
        res_V_data_1_V_TDATA,
        res_V_data_1_V_TVALID,
        res_V_data_1_V_TREADY,
        data_V_data_0_V_blk_n,
        data_V_data_1_V_blk_n,
        res_V_data_0_V_TDATA_blk_n,
        res_V_data_1_V_TDATA_blk_n
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] data_V_data_0_V_dout;
input   data_V_data_0_V_empty_n;
output   data_V_data_0_V_read;
input  [15:0] data_V_data_1_V_dout;
input   data_V_data_1_V_empty_n;
output   data_V_data_1_V_read;
input   res_V_data_0_V_TREADY;
output  [15:0] res_V_data_0_V_TDATA;
output   res_V_data_0_V_TVALID;
output  [15:0] res_V_data_1_V_TDATA;
output   res_V_data_1_V_TVALID;
input   res_V_data_1_V_TREADY;
output   data_V_data_0_V_blk_n;
output   data_V_data_1_V_blk_n;
output   res_V_data_0_V_TDATA_blk_n;
output   res_V_data_1_V_TDATA_blk_n;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_V_data_0_V_read;
reg data_V_data_1_V_read;
reg res_V_data_0_V_TVALID;
reg res_V_data_1_V_TVALID;
reg data_V_data_0_V_blk_n;
reg data_V_data_1_V_blk_n;
reg res_V_data_0_V_TDATA_blk_n;
reg res_V_data_1_V_TDATA_blk_n;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    io_acc_block_signal_op6;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
wire   [9:0] exp_table1_address0;
reg    exp_table1_ce0;
wire   [17:0] exp_table1_q0;
wire   [9:0] exp_table1_address1;
reg    exp_table1_ce1;
wire   [17:0] exp_table1_q1;
wire   [9:0] invert_table2_address0;
reg    invert_table2_ce0;
wire   [13:0] invert_table2_q0;
wire   [9:0] invert_table2_address1;
reg    invert_table2_ce1;
wire   [13:0] invert_table2_q1;
wire   [9:0] trunc_ln293_fu_326_p1;
reg   [9:0] trunc_ln293_reg_756;
reg   [2:0] tmp_4_reg_761;
wire   [9:0] trunc_ln293_1_fu_446_p1;
reg   [9:0] trunc_ln293_1_reg_766;
reg   [2:0] tmp_8_reg_771;
wire   [9:0] select_ln309_fu_614_p3;
reg   [9:0] select_ln309_reg_786;
wire   [9:0] select_ln309_1_fu_730_p3;
reg   [9:0] select_ln309_1_reg_791;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln295_fu_472_p1;
wire   [63:0] zext_ln295_1_fu_489_p1;
wire   [63:0] zext_ln311_fu_738_p1;
wire   [63:0] zext_ln311_1_fu_742_p1;
reg    ap_block_pp0_stage0_01001;
wire  signed [16:0] sext_ln703_1_fu_216_p1;
wire  signed [16:0] sext_ln703_fu_212_p1;
wire   [16:0] sub_ln1193_fu_220_p2;
wire   [12:0] tmp_1_fu_234_p4;
wire   [26:0] shl_ln_fu_226_p3;
wire   [3:0] trunc_ln851_fu_254_p1;
wire   [9:0] p_Result_5_0_1_fu_258_p3;
wire  signed [13:0] sext_ln850_fu_244_p1;
wire   [0:0] icmp_ln851_fu_266_p2;
wire   [13:0] add_ln700_fu_272_p2;
wire   [0:0] icmp_ln850_fu_248_p2;
wire   [13:0] select_ln851_fu_278_p3;
wire   [13:0] select_ln850_fu_286_p3;
wire   [12:0] trunc_ln292_fu_294_p1;
wire   [13:0] add_ln292_fu_298_p2;
wire   [0:0] tmp_2_fu_310_p3;
wire   [12:0] add_ln292_2_fu_304_p2;
wire   [12:0] select_ln293_fu_318_p3;
wire   [16:0] sub_ln1193_1_fu_340_p2;
wire   [12:0] tmp_3_fu_354_p4;
wire   [26:0] shl_ln1118_1_fu_346_p3;
wire   [3:0] trunc_ln851_1_fu_374_p1;
wire   [9:0] p_Result_5_1_fu_378_p3;
wire  signed [13:0] sext_ln850_1_fu_364_p1;
wire   [0:0] icmp_ln851_2_fu_386_p2;
wire   [13:0] add_ln700_1_fu_392_p2;
wire   [0:0] icmp_ln850_1_fu_368_p2;
wire   [13:0] select_ln851_2_fu_398_p3;
wire   [13:0] select_ln850_1_fu_406_p3;
wire   [12:0] trunc_ln292_1_fu_414_p1;
wire   [13:0] add_ln292_1_fu_418_p2;
wire   [0:0] tmp_6_fu_430_p3;
wire   [12:0] add_ln292_3_fu_424_p2;
wire   [12:0] select_ln293_1_fu_438_p3;
wire   [0:0] icmp_ln294_fu_460_p2;
wire   [9:0] select_ln294_fu_465_p3;
wire   [0:0] icmp_ln294_1_fu_477_p2;
wire   [9:0] select_ln294_1_fu_482_p3;
wire   [17:0] add_ln703_fu_494_p2;
wire   [11:0] tmp_5_fu_514_p4;
wire   [27:0] shl_ln1118_2_fu_506_p3;
wire   [5:0] trunc_ln851_2_fu_534_p1;
wire   [9:0] p_Result_2_fu_538_p3;
wire  signed [12:0] sext_ln850_2_fu_524_p1;
wire   [0:0] icmp_ln851_3_fu_546_p2;
wire   [12:0] add_ln700_2_fu_552_p2;
wire   [0:0] icmp_ln850_2_fu_528_p2;
wire   [12:0] select_ln851_3_fu_558_p3;
wire   [12:0] select_ln850_2_fu_566_p3;
wire   [0:0] tmp_9_fu_578_p3;
wire   [11:0] trunc_ln308_fu_574_p1;
wire   [11:0] select_ln308_fu_586_p3;
wire   [1:0] tmp_10_fu_598_p4;
wire   [0:0] icmp_ln309_fu_608_p2;
wire   [9:0] trunc_ln308_1_fu_594_p1;
wire   [17:0] add_ln703_1_fu_500_p2;
wire   [11:0] tmp_7_fu_630_p4;
wire   [27:0] shl_ln1118_3_fu_622_p3;
wire   [5:0] trunc_ln851_3_fu_650_p1;
wire   [9:0] p_Result_2_1_fu_654_p3;
wire  signed [12:0] sext_ln850_3_fu_640_p1;
wire   [0:0] icmp_ln851_1_fu_662_p2;
wire   [12:0] add_ln700_3_fu_668_p2;
wire   [0:0] icmp_ln850_3_fu_644_p2;
wire   [12:0] select_ln851_1_fu_674_p3;
wire   [12:0] select_ln850_3_fu_682_p3;
wire   [0:0] tmp_11_fu_694_p3;
wire   [11:0] trunc_ln308_2_fu_690_p1;
wire   [11:0] select_ln308_1_fu_702_p3;
wire   [1:0] tmp_12_fu_714_p4;
wire   [0:0] icmp_ln309_1_fu_724_p2;
wire   [9:0] trunc_ln308_3_fu_710_p1;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to3;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

softmax_legacy_array_array_ap_fixed_2u_softmax_config7_s_g8j #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table1_address0),
    .ce0(exp_table1_ce0),
    .q0(exp_table1_q0),
    .address1(exp_table1_address1),
    .ce1(exp_table1_ce1),
    .q1(exp_table1_q1)
);

softmax_legacy_array_array_ap_fixed_2u_softmax_config7_s_hbi #(
    .DataWidth( 14 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table2_address0),
    .ce0(invert_table2_ce0),
    .q0(invert_table2_q0),
    .address1(invert_table2_address1),
    .ce1(invert_table2_ce1),
    .q1(invert_table2_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        select_ln309_1_reg_791 <= select_ln309_1_fu_730_p3;
        select_ln309_reg_786 <= select_ln309_fu_614_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_4_reg_761 <= {{select_ln293_fu_318_p3[12:10]}};
        tmp_8_reg_771 <= {{select_ln293_1_fu_438_p3[12:10]}};
        trunc_ln293_1_reg_766 <= trunc_ln293_1_fu_446_p1;
        trunc_ln293_reg_756 <= trunc_ln293_fu_326_p1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to3 = 1'b1;
    end else begin
        ap_idle_pp0_0to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to3 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_0_V_blk_n = data_V_data_0_V_empty_n;
    end else begin
        data_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_0_V_read = 1'b1;
    end else begin
        data_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_1_V_blk_n = data_V_data_1_V_empty_n;
    end else begin
        data_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_1_V_read = 1'b1;
    end else begin
        data_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce0 = 1'b1;
    end else begin
        exp_table1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_table1_ce1 = 1'b1;
    end else begin
        exp_table1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        invert_table2_ce0 = 1'b1;
    end else begin
        invert_table2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        invert_table2_ce1 = 1'b1;
    end else begin
        invert_table2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        res_V_data_0_V_TDATA_blk_n = res_V_data_0_V_TREADY;
    end else begin
        res_V_data_0_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        res_V_data_0_V_TVALID = 1'b1;
    end else begin
        res_V_data_0_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        res_V_data_1_V_TDATA_blk_n = res_V_data_1_V_TREADY;
    end else begin
        res_V_data_1_V_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        res_V_data_1_V_TVALID = 1'b1;
    end else begin
        res_V_data_1_V_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln292_1_fu_418_p2 = (14'd512 + select_ln850_1_fu_406_p3);

assign add_ln292_2_fu_304_p2 = (13'd512 + trunc_ln292_fu_294_p1);

assign add_ln292_3_fu_424_p2 = (13'd512 + trunc_ln292_1_fu_414_p1);

assign add_ln292_fu_298_p2 = (14'd512 + select_ln850_fu_286_p3);

assign add_ln700_1_fu_392_p2 = ($signed(14'd1) + $signed(sext_ln850_1_fu_364_p1));

assign add_ln700_2_fu_552_p2 = ($signed(13'd1) + $signed(sext_ln850_2_fu_524_p1));

assign add_ln700_3_fu_668_p2 = ($signed(13'd1) + $signed(sext_ln850_3_fu_640_p1));

assign add_ln700_fu_272_p2 = ($signed(14'd1) + $signed(sext_ln850_fu_244_p1));

assign add_ln703_1_fu_500_p2 = (18'd1024 + exp_table1_q1);

assign add_ln703_fu_494_p2 = (18'd1024 + exp_table1_q0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_start == 1'b1) & ((ap_start == 1'b0) | (io_acc_block_signal_op6 == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((res_V_data_0_V_TREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (io_acc_block_signal_op6 == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((res_V_data_0_V_TREADY == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_start == 1'b1) & ((ap_start == 1'b0) | (io_acc_block_signal_op6 == 1'b0))));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((ap_start == 1'b0) | (io_acc_block_signal_op6 == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign exp_table1_address0 = zext_ln295_fu_472_p1;

assign exp_table1_address1 = zext_ln295_1_fu_489_p1;

assign icmp_ln294_1_fu_477_p2 = ((tmp_8_reg_771 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln294_fu_460_p2 = ((tmp_4_reg_761 != 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln309_1_fu_724_p2 = ((tmp_12_fu_714_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln309_fu_608_p2 = ((tmp_10_fu_598_p4 != 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln850_1_fu_368_p2 = (($signed(shl_ln1118_1_fu_346_p3) < $signed(27'd134217713)) ? 1'b1 : 1'b0);

assign icmp_ln850_2_fu_528_p2 = (($signed(shl_ln1118_2_fu_506_p3) < $signed(28'd268435393)) ? 1'b1 : 1'b0);

assign icmp_ln850_3_fu_644_p2 = (($signed(shl_ln1118_3_fu_622_p3) < $signed(28'd268435393)) ? 1'b1 : 1'b0);

assign icmp_ln850_fu_248_p2 = (($signed(shl_ln_fu_226_p3) < $signed(27'd134217713)) ? 1'b1 : 1'b0);

assign icmp_ln851_1_fu_662_p2 = ((p_Result_2_1_fu_654_p3 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_2_fu_386_p2 = ((p_Result_5_1_fu_378_p3 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_3_fu_546_p2 = ((p_Result_2_fu_538_p3 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_fu_266_p2 = ((p_Result_5_0_1_fu_258_p3 == 10'd0) ? 1'b1 : 1'b0);

assign invert_table2_address0 = zext_ln311_fu_738_p1;

assign invert_table2_address1 = zext_ln311_1_fu_742_p1;

assign io_acc_block_signal_op6 = (data_V_data_1_V_empty_n & data_V_data_0_V_empty_n);

assign p_Result_2_1_fu_654_p3 = {{trunc_ln851_3_fu_650_p1}, {4'd0}};

assign p_Result_2_fu_538_p3 = {{trunc_ln851_2_fu_534_p1}, {4'd0}};

assign p_Result_5_0_1_fu_258_p3 = {{trunc_ln851_fu_254_p1}, {6'd0}};

assign p_Result_5_1_fu_378_p3 = {{trunc_ln851_1_fu_374_p1}, {6'd0}};

assign res_V_data_0_V_TDATA = invert_table2_q0;

assign res_V_data_1_V_TDATA = invert_table2_q1;

assign select_ln293_1_fu_438_p3 = ((tmp_6_fu_430_p3[0:0] === 1'b1) ? 13'd0 : add_ln292_3_fu_424_p2);

assign select_ln293_fu_318_p3 = ((tmp_2_fu_310_p3[0:0] === 1'b1) ? 13'd0 : add_ln292_2_fu_304_p2);

assign select_ln294_1_fu_482_p3 = ((icmp_ln294_1_fu_477_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln293_1_reg_766);

assign select_ln294_fu_465_p3 = ((icmp_ln294_fu_460_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln293_reg_756);

assign select_ln308_1_fu_702_p3 = ((tmp_11_fu_694_p3[0:0] === 1'b1) ? 12'd0 : trunc_ln308_2_fu_690_p1);

assign select_ln308_fu_586_p3 = ((tmp_9_fu_578_p3[0:0] === 1'b1) ? 12'd0 : trunc_ln308_fu_574_p1);

assign select_ln309_1_fu_730_p3 = ((icmp_ln309_1_fu_724_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln308_3_fu_710_p1);

assign select_ln309_fu_614_p3 = ((icmp_ln309_fu_608_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln308_1_fu_594_p1);

assign select_ln850_1_fu_406_p3 = ((icmp_ln850_1_fu_368_p2[0:0] === 1'b1) ? select_ln851_2_fu_398_p3 : sext_ln850_1_fu_364_p1);

assign select_ln850_2_fu_566_p3 = ((icmp_ln850_2_fu_528_p2[0:0] === 1'b1) ? select_ln851_3_fu_558_p3 : sext_ln850_2_fu_524_p1);

assign select_ln850_3_fu_682_p3 = ((icmp_ln850_3_fu_644_p2[0:0] === 1'b1) ? select_ln851_1_fu_674_p3 : sext_ln850_3_fu_640_p1);

assign select_ln850_fu_286_p3 = ((icmp_ln850_fu_248_p2[0:0] === 1'b1) ? select_ln851_fu_278_p3 : sext_ln850_fu_244_p1);

assign select_ln851_1_fu_674_p3 = ((icmp_ln851_1_fu_662_p2[0:0] === 1'b1) ? sext_ln850_3_fu_640_p1 : add_ln700_3_fu_668_p2);

assign select_ln851_2_fu_398_p3 = ((icmp_ln851_2_fu_386_p2[0:0] === 1'b1) ? sext_ln850_1_fu_364_p1 : add_ln700_1_fu_392_p2);

assign select_ln851_3_fu_558_p3 = ((icmp_ln851_3_fu_546_p2[0:0] === 1'b1) ? sext_ln850_2_fu_524_p1 : add_ln700_2_fu_552_p2);

assign select_ln851_fu_278_p3 = ((icmp_ln851_fu_266_p2[0:0] === 1'b1) ? sext_ln850_fu_244_p1 : add_ln700_fu_272_p2);

assign sext_ln703_1_fu_216_p1 = $signed(data_V_data_1_V_dout);

assign sext_ln703_fu_212_p1 = $signed(data_V_data_0_V_dout);

assign sext_ln850_1_fu_364_p1 = $signed(tmp_3_fu_354_p4);

assign sext_ln850_2_fu_524_p1 = $signed(tmp_5_fu_514_p4);

assign sext_ln850_3_fu_640_p1 = $signed(tmp_7_fu_630_p4);

assign sext_ln850_fu_244_p1 = $signed(tmp_1_fu_234_p4);

assign shl_ln1118_1_fu_346_p3 = {{sub_ln1193_1_fu_340_p2}, {10'd0}};

assign shl_ln1118_2_fu_506_p3 = {{add_ln703_fu_494_p2}, {10'd0}};

assign shl_ln1118_3_fu_622_p3 = {{add_ln703_1_fu_500_p2}, {10'd0}};

assign shl_ln_fu_226_p3 = {{sub_ln1193_fu_220_p2}, {10'd0}};

assign sub_ln1193_1_fu_340_p2 = ($signed(sext_ln703_fu_212_p1) - $signed(sext_ln703_1_fu_216_p1));

assign sub_ln1193_fu_220_p2 = ($signed(sext_ln703_1_fu_216_p1) - $signed(sext_ln703_fu_212_p1));

assign tmp_10_fu_598_p4 = {{select_ln308_fu_586_p3[11:10]}};

assign tmp_11_fu_694_p3 = select_ln850_3_fu_682_p3[32'd12];

assign tmp_12_fu_714_p4 = {{select_ln308_1_fu_702_p3[11:10]}};

assign tmp_1_fu_234_p4 = {{sub_ln1193_fu_220_p2[16:4]}};

assign tmp_2_fu_310_p3 = add_ln292_fu_298_p2[32'd13];

assign tmp_3_fu_354_p4 = {{sub_ln1193_1_fu_340_p2[16:4]}};

assign tmp_5_fu_514_p4 = {{add_ln703_fu_494_p2[17:6]}};

assign tmp_6_fu_430_p3 = add_ln292_1_fu_418_p2[32'd13];

assign tmp_7_fu_630_p4 = {{add_ln703_1_fu_500_p2[17:6]}};

assign tmp_9_fu_578_p3 = select_ln850_2_fu_566_p3[32'd12];

assign trunc_ln292_1_fu_414_p1 = select_ln850_1_fu_406_p3[12:0];

assign trunc_ln292_fu_294_p1 = select_ln850_fu_286_p3[12:0];

assign trunc_ln293_1_fu_446_p1 = select_ln293_1_fu_438_p3[9:0];

assign trunc_ln293_fu_326_p1 = select_ln293_fu_318_p3[9:0];

assign trunc_ln308_1_fu_594_p1 = select_ln308_fu_586_p3[9:0];

assign trunc_ln308_2_fu_690_p1 = select_ln850_3_fu_682_p3[11:0];

assign trunc_ln308_3_fu_710_p1 = select_ln308_1_fu_702_p3[9:0];

assign trunc_ln308_fu_574_p1 = select_ln850_2_fu_566_p3[11:0];

assign trunc_ln851_1_fu_374_p1 = sub_ln1193_1_fu_340_p2[3:0];

assign trunc_ln851_2_fu_534_p1 = add_ln703_fu_494_p2[5:0];

assign trunc_ln851_3_fu_650_p1 = add_ln703_1_fu_500_p2[5:0];

assign trunc_ln851_fu_254_p1 = sub_ln1193_fu_220_p2[3:0];

assign zext_ln295_1_fu_489_p1 = select_ln294_1_fu_482_p3;

assign zext_ln295_fu_472_p1 = select_ln294_fu_465_p3;

assign zext_ln311_1_fu_742_p1 = select_ln309_1_reg_791;

assign zext_ln311_fu_738_p1 = select_ln309_reg_786;

endmodule //softmax_legacy_array_array_ap_fixed_2u_softmax_config7_s
