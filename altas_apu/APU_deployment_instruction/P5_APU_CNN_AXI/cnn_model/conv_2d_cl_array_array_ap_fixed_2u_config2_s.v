// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv_2d_cl_array_array_ap_fixed_2u_config2_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        data_V_data_V_dout,
        data_V_data_V_empty_n,
        data_V_data_V_read,
        res_V_data_0_V_din,
        res_V_data_0_V_full_n,
        res_V_data_0_V_write,
        res_V_data_1_V_din,
        res_V_data_1_V_full_n,
        res_V_data_1_V_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_pp0_stage0 = 3'd2;
parameter    ap_ST_fsm_state7 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [19:0] data_V_data_V_dout;
input   data_V_data_V_empty_n;
output   data_V_data_V_read;
output  [19:0] res_V_data_0_V_din;
input   res_V_data_0_V_full_n;
output   res_V_data_0_V_write;
output  [19:0] res_V_data_1_V_din;
input   res_V_data_1_V_full_n;
output   res_V_data_1_V_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg data_V_data_V_read;
reg res_V_data_0_V_write;
reg res_V_data_1_V_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [19:0] kernel_data_V_1;
reg   [19:0] kernel_data_V_2;
reg   [19:0] kernel_data_V_4;
reg   [19:0] kernel_data_V_5;
reg   [19:0] kernel_data_V_7;
reg   [19:0] kernel_data_V_8;
reg   [31:0] sX;
reg   [31:0] sY;
reg   [31:0] pY;
reg   [31:0] pX;
reg    data_V_data_V_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln78_reg_2460;
reg    res_V_data_0_V_blk_n;
reg    ap_enable_reg_pp0_iter4;
reg   [0:0] and_ln272_2_reg_2531;
reg   [0:0] and_ln272_2_reg_2531_pp0_iter3_reg;
reg    res_V_data_1_V_blk_n;
reg   [6:0] indvar_flatten_reg_220;
reg   [19:0] kernel_data_V_1_loc_1_reg_231;
reg   [19:0] kernel_data_V_2_loc_1_reg_241;
reg   [19:0] kernel_data_V_4_loc_1_reg_251;
reg   [19:0] kernel_data_V_5_loc_1_reg_261;
reg   [19:0] kernel_data_V_7_loc_1_reg_271;
reg   [19:0] kernel_data_V_8_loc_1_reg_281;
reg    ap_block_state1;
wire   [0:0] icmp_ln78_fu_1656_p2;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    io_acc_block_signal_op205;
reg    ap_block_state6_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln78_reg_2460_pp0_iter1_reg;
wire   [6:0] add_ln78_fu_1662_p2;
reg    ap_enable_reg_pp0_iter0;
reg  signed [19:0] kernel_data_V_6_ret_reg_2469;
reg  signed [19:0] kernel_data_V_3_ret_reg_2475;
reg  signed [19:0] kernel_data_V_0_ret_reg_2481;
reg  signed [19:0] kernel_data_V_1_ret_reg_2487;
reg  signed [19:0] kernel_data_V_2_ret_reg_2494;
reg  signed [19:0] kernel_data_V_4_ret_reg_2502;
reg  signed [19:0] kernel_data_V_5_ret_reg_2509;
reg  signed [19:0] kernel_data_V_7_ret_reg_2516;
reg  signed [19:0] kernel_data_V_8_ret_reg_2524;
wire   [0:0] and_ln272_2_fu_1808_p2;
reg   [17:0] trunc_ln_reg_2535;
reg   [19:0] trunc_ln708_s_reg_2540;
reg   [18:0] trunc_ln708_1181_reg_2545;
reg   [17:0] trunc_ln708_1182_reg_2550;
reg   [14:0] trunc_ln708_1183_reg_2555;
reg   [19:0] trunc_ln708_1184_reg_2560;
reg   [19:0] trunc_ln708_1185_reg_2565;
reg   [18:0] trunc_ln708_1186_reg_2570;
reg   [18:0] trunc_ln708_1187_reg_2575;
reg   [19:0] trunc_ln708_1188_reg_2580;
reg   [17:0] trunc_ln708_1189_reg_2585;
reg   [18:0] trunc_ln708_1190_reg_2590;
reg   [19:0] trunc_ln708_1191_reg_2595;
reg   [18:0] trunc_ln708_1192_reg_2600;
reg   [19:0] trunc_ln708_1193_reg_2605;
reg   [14:0] trunc_ln708_1194_reg_2610;
reg   [18:0] trunc_ln708_1195_reg_2615;
reg   [17:0] trunc_ln708_1196_reg_2620;
wire   [0:0] icmp_ln293_fu_2117_p2;
reg   [0:0] icmp_ln293_reg_2625;
wire   [19:0] add_ln703_1285_fu_2299_p2;
reg   [19:0] add_ln703_1285_reg_2632;
wire   [19:0] add_ln703_1286_fu_2305_p2;
reg   [19:0] add_ln703_1286_reg_2637;
wire   [19:0] add_ln703_1288_fu_2321_p2;
reg   [19:0] add_ln703_1288_reg_2642;
wire   [19:0] add_ln703_1293_fu_2336_p2;
reg   [19:0] add_ln703_1293_reg_2647;
wire   [19:0] add_ln703_1294_fu_2342_p2;
reg   [19:0] add_ln703_1294_reg_2652;
wire   [19:0] add_ln703_1296_fu_2358_p2;
reg   [19:0] add_ln703_1296_reg_2657;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
wire    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_start;
wire    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_done;
wire    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_idle;
wire    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_ready;
wire   [19:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_0;
wire   [19:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_1;
wire   [19:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_2;
wire   [19:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_3;
wire   [19:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_4;
wire   [19:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_5;
wire   [19:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_6;
wire   [19:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_7;
wire   [19:0] call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_8;
reg    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_ce;
wire    ap_block_state2_pp0_stage0_iter0_ignore_call11;
reg    ap_block_state3_pp0_stage0_iter1_ignore_call11;
wire    ap_block_state4_pp0_stage0_iter2_ignore_call11;
wire    ap_block_state5_pp0_stage0_iter3_ignore_call11;
reg    ap_block_state6_pp0_stage0_iter4_ignore_call11;
reg    ap_block_pp0_stage0_11001_ignoreCallOp42;
reg   [19:0] ap_phi_mux_kernel_data_V_1_loc_1_phi_fu_234_p4;
reg   [19:0] ap_phi_mux_kernel_data_V_2_loc_1_phi_fu_244_p4;
reg   [19:0] ap_phi_mux_kernel_data_V_4_loc_1_phi_fu_254_p4;
reg   [19:0] ap_phi_mux_kernel_data_V_5_loc_1_phi_fu_264_p4;
reg   [19:0] ap_phi_mux_kernel_data_V_7_loc_1_phi_fu_274_p4;
reg   [19:0] ap_phi_mux_kernel_data_V_8_loc_1_phi_fu_284_p4;
reg    call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_start_reg;
wire   [31:0] select_ln308_fu_2144_p3;
wire   [31:0] add_ln301_fu_2192_p2;
wire   [0:0] icmp_ln297_fu_2183_p2;
wire   [31:0] add_ln306_fu_2126_p2;
reg   [31:0] pX_loc_1_fu_188;
reg   [31:0] sX_loc_1_fu_192;
reg   [31:0] pY_loc_1_fu_196;
reg   [31:0] sY_loc_1_fu_200;
wire   [31:0] select_ln303_fu_2210_p3;
reg    ap_block_pp0_stage0_01001;
wire  signed [19:0] mul_ln1118_955_fu_291_p0;
wire  signed [19:0] mul_ln1118_958_fu_292_p0;
wire  signed [19:0] mul_ln1118_960_fu_293_p0;
wire  signed [19:0] mul_ln1118_fu_294_p0;
wire  signed [19:0] mul_ln1118_950_fu_295_p0;
wire  signed [19:0] mul_ln1118_961_fu_296_p0;
wire  signed [19:0] mul_ln1118_962_fu_297_p0;
wire  signed [19:0] mul_ln1118_951_fu_298_p0;
wire  signed [19:0] mul_ln1118_963_fu_300_p0;
wire  signed [19:0] mul_ln1118_959_fu_301_p0;
wire  signed [19:0] mul_ln1118_953_fu_302_p0;
wire  signed [19:0] mul_ln1118_957_fu_303_p0;
wire  signed [19:0] mul_ln1118_954_fu_304_p0;
wire  signed [19:0] mul_ln1118_952_fu_305_p0;
wire  signed [19:0] mul_ln1118_949_fu_307_p0;
wire  signed [19:0] mul_ln1118_956_fu_308_p0;
wire   [30:0] tmp_fu_1764_p4;
wire   [30:0] tmp_2_fu_1780_p4;
wire   [0:0] icmp_ln272_fu_1752_p2;
wire   [0:0] icmp_ln272_1_fu_1758_p2;
wire   [0:0] icmp_ln272_2_fu_1774_p2;
wire   [0:0] icmp_ln272_3_fu_1790_p2;
wire   [0:0] and_ln272_1_fu_1802_p2;
wire   [0:0] and_ln272_fu_1796_p2;
wire   [27:0] mul_ln1118_fu_294_p2;
wire   [29:0] mul_ln1118_949_fu_307_p2;
wire   [28:0] mul_ln1118_950_fu_295_p2;
wire   [27:0] mul_ln1118_951_fu_298_p2;
wire   [23:0] shl_ln_fu_1874_p3;
wire   [20:0] shl_ln1118_s_fu_1885_p3;
wire  signed [24:0] sext_ln1118_935_fu_1881_p1;
wire  signed [24:0] sext_ln1118_936_fu_1892_p1;
wire   [24:0] sub_ln1118_fu_1896_p2;
wire   [29:0] mul_ln1118_952_fu_305_p2;
wire   [29:0] mul_ln1118_953_fu_302_p2;
wire   [28:0] mul_ln1118_954_fu_304_p2;
wire   [28:0] mul_ln1118_955_fu_291_p2;
wire   [29:0] mul_ln1118_956_fu_308_p2;
wire   [27:0] mul_ln1118_957_fu_303_p2;
wire   [28:0] mul_ln1118_958_fu_292_p2;
wire   [29:0] mul_ln1118_959_fu_301_p2;
wire   [28:0] mul_ln1118_960_fu_293_p2;
wire   [29:0] mul_ln1118_961_fu_296_p2;
wire   [23:0] shl_ln1118_377_fu_2048_p3;
wire   [21:0] shl_ln1118_378_fu_2059_p3;
wire  signed [24:0] sext_ln1118_949_fu_2066_p1;
wire  signed [24:0] sext_ln1118_948_fu_2055_p1;
wire   [24:0] sub_ln1118_262_fu_2070_p2;
wire   [28:0] mul_ln1118_962_fu_297_p2;
wire   [27:0] mul_ln1118_963_fu_300_p2;
wire   [31:0] add_ln308_fu_2138_p2;
wire   [31:0] add_ln303_fu_2204_p2;
wire  signed [19:0] sext_ln708_398_fu_2257_p1;
wire   [19:0] add_ln703_fu_2290_p2;
wire   [19:0] add_ln703_1284_fu_2294_p2;
wire  signed [19:0] sext_ln708_404_fu_2284_p1;
wire  signed [19:0] sext_ln708_401_fu_2269_p1;
wire  signed [18:0] sext_ln1118_937_fu_2263_p1;
wire  signed [18:0] sext_ln1118_944_fu_2272_p1;
wire   [18:0] add_ln703_1287_fu_2311_p2;
wire  signed [19:0] sext_ln708_fu_2254_p1;
wire  signed [19:0] sext_ln703_543_fu_2317_p1;
wire  signed [19:0] sext_ln708_400_fu_2266_p1;
wire   [19:0] add_ln703_1291_fu_2327_p2;
wire   [19:0] add_ln703_1292_fu_2331_p2;
wire  signed [19:0] sext_ln708_403_fu_2278_p1;
wire  signed [19:0] sext_ln708_402_fu_2275_p1;
wire  signed [18:0] sext_ln1118_950_fu_2281_p1;
wire  signed [18:0] sext_ln703_fu_2287_p1;
wire   [18:0] add_ln703_1295_fu_2348_p2;
wire  signed [19:0] sext_ln708_399_fu_2260_p1;
wire  signed [19:0] sext_ln703_544_fu_2354_p1;
wire   [19:0] add_ln703_1289_fu_2373_p2;
wire   [19:0] add_ln703_1297_fu_2383_p2;
wire    ap_CS_fsm_state7;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_325;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 kernel_data_V_1 = 20'd0;
#0 kernel_data_V_2 = 20'd0;
#0 kernel_data_V_4 = 20'd0;
#0 kernel_data_V_5 = 20'd0;
#0 kernel_data_V_7 = 20'd0;
#0 kernel_data_V_8 = 20'd0;
#0 sX = 32'd0;
#0 sY = 32'd0;
#0 pY = 32'd0;
#0 pX = 32'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_start_reg = 1'b0;
end

shift_line_buffer_array_ap_fixed_1u_config2_s call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_start),
    .ap_done(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_done),
    .ap_idle(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_idle),
    .ap_ready(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_ready),
    .in_elem_data_V_read(data_V_data_V_dout),
    .kernel_window_1_V_read(ap_phi_mux_kernel_data_V_1_loc_1_phi_fu_234_p4),
    .kernel_window_2_V_read(ap_phi_mux_kernel_data_V_2_loc_1_phi_fu_244_p4),
    .kernel_window_4_V_read(ap_phi_mux_kernel_data_V_4_loc_1_phi_fu_254_p4),
    .kernel_window_5_V_read(ap_phi_mux_kernel_data_V_5_loc_1_phi_fu_264_p4),
    .kernel_window_7_V_read(ap_phi_mux_kernel_data_V_7_loc_1_phi_fu_274_p4),
    .kernel_window_8_V_read(ap_phi_mux_kernel_data_V_8_loc_1_phi_fu_284_p4),
    .ap_return_0(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_0),
    .ap_return_1(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_1),
    .ap_return_2(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_2),
    .ap_return_3(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_3),
    .ap_return_4(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_4),
    .ap_return_5(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_5),
    .ap_return_6(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_6),
    .ap_return_7(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_7),
    .ap_return_8(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_8),
    .ap_ce(call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln78_fu_1656_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_start_reg <= 1'b1;
        end else if ((call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_ready == 1'b1)) begin
            call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_fu_1656_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_reg_220 <= add_ln78_fu_1662_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_220 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_2460_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_data_V_1_loc_1_reg_231 <= kernel_data_V_1_ret_reg_2487;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_data_V_1_loc_1_reg_231 <= kernel_data_V_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_2460_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_data_V_2_loc_1_reg_241 <= kernel_data_V_2_ret_reg_2494;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_data_V_2_loc_1_reg_241 <= kernel_data_V_2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_2460_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_data_V_4_loc_1_reg_251 <= kernel_data_V_4_ret_reg_2502;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_data_V_4_loc_1_reg_251 <= kernel_data_V_4;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_2460_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_data_V_5_loc_1_reg_261 <= kernel_data_V_5_ret_reg_2509;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_data_V_5_loc_1_reg_261 <= kernel_data_V_5;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_2460_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_data_V_7_loc_1_reg_271 <= kernel_data_V_7_ret_reg_2516;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_data_V_7_loc_1_reg_271 <= kernel_data_V_7;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_2460_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_data_V_8_loc_1_reg_281 <= kernel_data_V_8_ret_reg_2524;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        kernel_data_V_8_loc_1_reg_281 <= kernel_data_V_8;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((icmp_ln293_fu_2117_p2 == 1'd1)) begin
            pX <= 32'd0;
        end else if ((icmp_ln293_fu_2117_p2 == 1'd0)) begin
            pX <= add_ln306_fu_2126_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln293_fu_2117_p2 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pX_loc_1_fu_188 <= 32'd0;
    end else if (((icmp_ln293_fu_2117_p2 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pX_loc_1_fu_188 <= add_ln306_fu_2126_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        pX_loc_1_fu_188 <= pX;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_325)) begin
        if ((icmp_ln297_fu_2183_p2 == 1'd1)) begin
            pY <= 32'd0;
        end else if ((icmp_ln297_fu_2183_p2 == 1'd0)) begin
            pY <= add_ln301_fu_2192_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln297_fu_2183_p2 == 1'd1) & (icmp_ln293_fu_2117_p2 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pY_loc_1_fu_196 <= 32'd0;
    end else if (((icmp_ln293_fu_2117_p2 == 1'd1) & (icmp_ln297_fu_2183_p2 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pY_loc_1_fu_196 <= add_ln301_fu_2192_p2;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        pY_loc_1_fu_196 <= pY;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if ((icmp_ln293_fu_2117_p2 == 1'd1)) begin
            sX <= 32'd0;
        end else if ((icmp_ln293_fu_2117_p2 == 1'd0)) begin
            sX <= select_ln308_fu_2144_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln293_fu_2117_p2 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sX_loc_1_fu_192 <= 32'd0;
    end else if (((icmp_ln293_fu_2117_p2 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sX_loc_1_fu_192 <= select_ln308_fu_2144_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        sX_loc_1_fu_192 <= sX;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln297_fu_2183_p2 == 1'd1) & (icmp_ln293_fu_2117_p2 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sY_loc_1_fu_200 <= 32'd0;
    end else if (((icmp_ln293_fu_2117_p2 == 1'd1) & (icmp_ln297_fu_2183_p2 == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sY_loc_1_fu_200 <= select_ln303_fu_2210_p3;
    end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        sY_loc_1_fu_200 <= sY;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln272_2_reg_2531) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln703_1285_reg_2632 <= add_ln703_1285_fu_2299_p2;
        add_ln703_1286_reg_2637 <= add_ln703_1286_fu_2305_p2;
        add_ln703_1288_reg_2642 <= add_ln703_1288_fu_2321_p2;
        add_ln703_1293_reg_2647 <= add_ln703_1293_fu_2336_p2;
        add_ln703_1294_reg_2652 <= add_ln703_1294_fu_2342_p2;
        add_ln703_1296_reg_2657 <= add_ln703_1296_fu_2358_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_2460_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln272_2_reg_2531 <= and_ln272_2_fu_1808_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln272_2_reg_2531_pp0_iter3_reg <= and_ln272_2_reg_2531;
        icmp_ln293_reg_2625 <= icmp_ln293_fu_2117_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln78_reg_2460 <= icmp_ln78_fu_1656_p2;
        icmp_ln78_reg_2460_pp0_iter1_reg <= icmp_ln78_reg_2460;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_2460 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_data_V_0_ret_reg_2481 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_0;
        kernel_data_V_3_ret_reg_2475 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_1;
        kernel_data_V_6_ret_reg_2469 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_2460 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        kernel_data_V_1 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_3;
        kernel_data_V_1_ret_reg_2487 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_3;
        kernel_data_V_2 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_4;
        kernel_data_V_2_ret_reg_2494 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_4;
        kernel_data_V_4 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_5;
        kernel_data_V_4_ret_reg_2502 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_5;
        kernel_data_V_5 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_6;
        kernel_data_V_5_ret_reg_2509 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_6;
        kernel_data_V_7 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_7;
        kernel_data_V_7_ret_reg_2516 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_7;
        kernel_data_V_8 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_8;
        kernel_data_V_8_ret_reg_2524 <= call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_return_8;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln293_reg_2625 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sY <= sY_loc_1_fu_200;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln272_2_fu_1808_p2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln708_1181_reg_2545 <= {{mul_ln1118_950_fu_295_p2[28:10]}};
        trunc_ln708_1182_reg_2550 <= {{mul_ln1118_951_fu_298_p2[27:10]}};
        trunc_ln708_1183_reg_2555 <= {{sub_ln1118_fu_1896_p2[24:10]}};
        trunc_ln708_1184_reg_2560 <= {{mul_ln1118_952_fu_305_p2[29:10]}};
        trunc_ln708_1185_reg_2565 <= {{mul_ln1118_953_fu_302_p2[29:10]}};
        trunc_ln708_1186_reg_2570 <= {{mul_ln1118_954_fu_304_p2[28:10]}};
        trunc_ln708_1187_reg_2575 <= {{mul_ln1118_955_fu_291_p2[28:10]}};
        trunc_ln708_1188_reg_2580 <= {{mul_ln1118_956_fu_308_p2[29:10]}};
        trunc_ln708_1189_reg_2585 <= {{mul_ln1118_957_fu_303_p2[27:10]}};
        trunc_ln708_1190_reg_2590 <= {{mul_ln1118_958_fu_292_p2[28:10]}};
        trunc_ln708_1191_reg_2595 <= {{mul_ln1118_959_fu_301_p2[29:10]}};
        trunc_ln708_1192_reg_2600 <= {{mul_ln1118_960_fu_293_p2[28:10]}};
        trunc_ln708_1193_reg_2605 <= {{mul_ln1118_961_fu_296_p2[29:10]}};
        trunc_ln708_1194_reg_2610 <= {{sub_ln1118_262_fu_2070_p2[24:10]}};
        trunc_ln708_1195_reg_2615 <= {{mul_ln1118_962_fu_297_p2[28:10]}};
        trunc_ln708_1196_reg_2620 <= {{mul_ln1118_963_fu_300_p2[27:10]}};
        trunc_ln708_s_reg_2540 <= {{mul_ln1118_949_fu_307_p2[29:10]}};
        trunc_ln_reg_2535 <= {{mul_ln1118_fu_294_p2[27:10]}};
    end
end

always @ (*) begin
    if ((icmp_ln78_fu_1656_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_2460_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_data_V_1_loc_1_phi_fu_234_p4 = kernel_data_V_1_ret_reg_2487;
    end else begin
        ap_phi_mux_kernel_data_V_1_loc_1_phi_fu_234_p4 = kernel_data_V_1_loc_1_reg_231;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_2460_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_data_V_2_loc_1_phi_fu_244_p4 = kernel_data_V_2_ret_reg_2494;
    end else begin
        ap_phi_mux_kernel_data_V_2_loc_1_phi_fu_244_p4 = kernel_data_V_2_loc_1_reg_241;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_2460_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_data_V_4_loc_1_phi_fu_254_p4 = kernel_data_V_4_ret_reg_2502;
    end else begin
        ap_phi_mux_kernel_data_V_4_loc_1_phi_fu_254_p4 = kernel_data_V_4_loc_1_reg_251;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_2460_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_data_V_5_loc_1_phi_fu_264_p4 = kernel_data_V_5_ret_reg_2509;
    end else begin
        ap_phi_mux_kernel_data_V_5_loc_1_phi_fu_264_p4 = kernel_data_V_5_loc_1_reg_261;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_2460_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_data_V_7_loc_1_phi_fu_274_p4 = kernel_data_V_7_ret_reg_2516;
    end else begin
        ap_phi_mux_kernel_data_V_7_loc_1_phi_fu_274_p4 = kernel_data_V_7_loc_1_reg_271;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_2460_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_kernel_data_V_8_loc_1_phi_fu_284_p4 = kernel_data_V_8_ret_reg_2524;
    end else begin
        ap_phi_mux_kernel_data_V_8_loc_1_phi_fu_284_p4 = kernel_data_V_8_loc_1_reg_281;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp42) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_ce = 1'b1;
    end else begin
        call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_2460 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        data_V_data_V_blk_n = data_V_data_V_empty_n;
    end else begin
        data_V_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln78_reg_2460 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        data_V_data_V_read = 1'b1;
    end else begin
        data_V_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln272_2_reg_2531_pp0_iter3_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        res_V_data_0_V_blk_n = res_V_data_0_V_full_n;
    end else begin
        res_V_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln272_2_reg_2531_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_V_data_0_V_write = 1'b1;
    end else begin
        res_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln272_2_reg_2531_pp0_iter3_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        res_V_data_1_V_blk_n = res_V_data_1_V_full_n;
    end else begin
        res_V_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln272_2_reg_2531_pp0_iter3_reg) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        res_V_data_1_V_write = 1'b1;
    end else begin
        res_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln78_fu_1656_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter3 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((icmp_ln78_fu_1656_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln301_fu_2192_p2 = (pY_loc_1_fu_196 + 32'd1);

assign add_ln303_fu_2204_p2 = (sY_loc_1_fu_200 + 32'd1);

assign add_ln306_fu_2126_p2 = (pX_loc_1_fu_188 + 32'd1);

assign add_ln308_fu_2138_p2 = (sX_loc_1_fu_192 + 32'd1);

assign add_ln703_1284_fu_2294_p2 = ($signed(sext_ln708_398_fu_2257_p1) + $signed(trunc_ln708_1193_reg_2605));

assign add_ln703_1285_fu_2299_p2 = (add_ln703_fu_2290_p2 + add_ln703_1284_fu_2294_p2);

assign add_ln703_1286_fu_2305_p2 = ($signed(sext_ln708_404_fu_2284_p1) + $signed(sext_ln708_401_fu_2269_p1));

assign add_ln703_1287_fu_2311_p2 = ($signed(sext_ln1118_937_fu_2263_p1) + $signed(sext_ln1118_944_fu_2272_p1));

assign add_ln703_1288_fu_2321_p2 = ($signed(sext_ln708_fu_2254_p1) + $signed(sext_ln703_543_fu_2317_p1));

assign add_ln703_1289_fu_2373_p2 = (add_ln703_1286_reg_2637 + add_ln703_1288_reg_2642);

assign add_ln703_1291_fu_2327_p2 = (trunc_ln708_1188_reg_2580 + trunc_ln708_1184_reg_2560);

assign add_ln703_1292_fu_2331_p2 = ($signed(sext_ln708_400_fu_2266_p1) + $signed(trunc_ln708_s_reg_2540));

assign add_ln703_1293_fu_2336_p2 = (add_ln703_1291_fu_2327_p2 + add_ln703_1292_fu_2331_p2);

assign add_ln703_1294_fu_2342_p2 = ($signed(sext_ln708_403_fu_2278_p1) + $signed(sext_ln708_402_fu_2275_p1));

assign add_ln703_1295_fu_2348_p2 = ($signed(sext_ln1118_950_fu_2281_p1) + $signed(sext_ln703_fu_2287_p1));

assign add_ln703_1296_fu_2358_p2 = ($signed(sext_ln708_399_fu_2260_p1) + $signed(sext_ln703_544_fu_2354_p1));

assign add_ln703_1297_fu_2383_p2 = (add_ln703_1294_reg_2652 + add_ln703_1296_reg_2657);

assign add_ln703_fu_2290_p2 = (trunc_ln708_1191_reg_2595 + trunc_ln708_1185_reg_2565);

assign add_ln78_fu_1662_p2 = (indvar_flatten_reg_220 + 7'd1);

assign and_ln272_1_fu_1802_p2 = (icmp_ln272_3_fu_1790_p2 & icmp_ln272_2_fu_1774_p2);

assign and_ln272_2_fu_1808_p2 = (and_ln272_fu_1796_p2 & and_ln272_1_fu_1802_p2);

assign and_ln272_fu_1796_p2 = (icmp_ln272_fu_1752_p2 & icmp_ln272_1_fu_1758_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((1'd1 == and_ln272_2_reg_2531_pp0_iter3_reg) & (io_acc_block_signal_op205 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((icmp_ln78_reg_2460 == 1'd0) & (data_V_data_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'd1 == and_ln272_2_reg_2531_pp0_iter3_reg) & (io_acc_block_signal_op205 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((icmp_ln78_reg_2460 == 1'd0) & (data_V_data_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp42 = (((1'd1 == and_ln272_2_reg_2531_pp0_iter3_reg) & (io_acc_block_signal_op205 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((icmp_ln78_reg_2460 == 1'd0) & (data_V_data_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'd1 == and_ln272_2_reg_2531_pp0_iter3_reg) & (io_acc_block_signal_op205 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((icmp_ln78_reg_2460 == 1'd0) & (data_V_data_V_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0_ignore_call11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln78_reg_2460 == 1'd0) & (data_V_data_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1_ignore_call11 = ((icmp_ln78_reg_2460 == 1'd0) & (data_V_data_V_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2_ignore_call11 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3_ignore_call11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter4 = ((1'd1 == and_ln272_2_reg_2531_pp0_iter3_reg) & (io_acc_block_signal_op205 == 1'b0));
end

always @ (*) begin
    ap_block_state6_pp0_stage0_iter4_ignore_call11 = ((1'd1 == and_ln272_2_reg_2531_pp0_iter3_reg) & (io_acc_block_signal_op205 == 1'b0));
end

always @ (*) begin
    ap_condition_325 = ((icmp_ln293_fu_2117_p2 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ready = internal_ap_ready;

assign call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_start = call_ret_shift_line_buffer_array_ap_fixed_1u_config2_s_fu_1574_ap_start_reg;

assign icmp_ln272_1_fu_1758_p2 = ((sY_loc_1_fu_200 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln272_2_fu_1774_p2 = (($signed(tmp_fu_1764_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln272_3_fu_1790_p2 = (($signed(tmp_2_fu_1780_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln272_fu_1752_p2 = ((sX_loc_1_fu_192 == 32'd2) ? 1'b1 : 1'b0);

assign icmp_ln293_fu_2117_p2 = ((pX_loc_1_fu_188 == 32'd9) ? 1'b1 : 1'b0);

assign icmp_ln297_fu_2183_p2 = ((pY_loc_1_fu_196 == 32'd9) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_1656_p2 = ((indvar_flatten_reg_220 == 7'd100) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op205 = (res_V_data_1_V_full_n & res_V_data_0_V_full_n);

assign mul_ln1118_949_fu_307_p0 = kernel_data_V_0_ret_reg_2481;

assign mul_ln1118_949_fu_307_p2 = ($signed(mul_ln1118_949_fu_307_p0) * $signed('h1EC));

assign mul_ln1118_950_fu_295_p0 = kernel_data_V_1_ret_reg_2487;

assign mul_ln1118_950_fu_295_p2 = ($signed(mul_ln1118_950_fu_295_p0) * $signed(-'hF5));

assign mul_ln1118_951_fu_298_p0 = kernel_data_V_1_ret_reg_2487;

assign mul_ln1118_951_fu_298_p2 = ($signed(mul_ln1118_951_fu_298_p0) * $signed('h5F));

assign mul_ln1118_952_fu_305_p0 = kernel_data_V_2_ret_reg_2494;

assign mul_ln1118_952_fu_305_p2 = ($signed(mul_ln1118_952_fu_305_p0) * $signed('h20D));

assign mul_ln1118_953_fu_302_p0 = kernel_data_V_3_ret_reg_2475;

assign mul_ln1118_953_fu_302_p2 = ($signed(mul_ln1118_953_fu_302_p0) * $signed('h19F));

assign mul_ln1118_954_fu_304_p0 = kernel_data_V_3_ret_reg_2475;

assign mul_ln1118_954_fu_304_p2 = ($signed(mul_ln1118_954_fu_304_p0) * $signed('hCC));

assign mul_ln1118_955_fu_291_p0 = kernel_data_V_4_ret_reg_2502;

assign mul_ln1118_955_fu_291_p2 = ($signed(mul_ln1118_955_fu_291_p0) * $signed(-'hEA));

assign mul_ln1118_956_fu_308_p0 = kernel_data_V_4_ret_reg_2502;

assign mul_ln1118_956_fu_308_p2 = ($signed(mul_ln1118_956_fu_308_p0) * $signed('h164));

assign mul_ln1118_957_fu_303_p0 = kernel_data_V_5_ret_reg_2509;

assign mul_ln1118_957_fu_303_p2 = ($signed(mul_ln1118_957_fu_303_p0) * $signed(-'h59));

assign mul_ln1118_958_fu_292_p0 = kernel_data_V_5_ret_reg_2509;

assign mul_ln1118_958_fu_292_p2 = ($signed(mul_ln1118_958_fu_292_p0) * $signed('hD7));

assign mul_ln1118_959_fu_301_p0 = kernel_data_V_6_ret_reg_2469;

assign mul_ln1118_959_fu_301_p2 = ($signed(mul_ln1118_959_fu_301_p0) * $signed('h1FD));

assign mul_ln1118_960_fu_293_p0 = kernel_data_V_6_ret_reg_2469;

assign mul_ln1118_960_fu_293_p2 = ($signed(mul_ln1118_960_fu_293_p0) * $signed('hA3));

assign mul_ln1118_961_fu_296_p0 = kernel_data_V_7_ret_reg_2516;

assign mul_ln1118_961_fu_296_p2 = ($signed(mul_ln1118_961_fu_296_p0) * $signed('h188));

assign mul_ln1118_962_fu_297_p0 = kernel_data_V_8_ret_reg_2524;

assign mul_ln1118_962_fu_297_p2 = ($signed(mul_ln1118_962_fu_297_p0) * $signed('hBA));

assign mul_ln1118_963_fu_300_p0 = kernel_data_V_8_ret_reg_2524;

assign mul_ln1118_963_fu_300_p2 = ($signed(mul_ln1118_963_fu_300_p0) * $signed('h74));

assign mul_ln1118_fu_294_p0 = kernel_data_V_0_ret_reg_2481;

assign mul_ln1118_fu_294_p2 = ($signed(mul_ln1118_fu_294_p0) * $signed('h72));

assign res_V_data_0_V_din = (add_ln703_1285_reg_2632 + add_ln703_1289_fu_2373_p2);

assign res_V_data_1_V_din = (add_ln703_1293_reg_2647 + add_ln703_1297_fu_2383_p2);

assign select_ln303_fu_2210_p3 = ((icmp_ln272_1_fu_1758_p2[0:0] === 1'b1) ? 32'd2 : add_ln303_fu_2204_p2);

assign select_ln308_fu_2144_p3 = ((icmp_ln272_fu_1752_p2[0:0] === 1'b1) ? 32'd2 : add_ln308_fu_2138_p2);

assign sext_ln1118_935_fu_1881_p1 = $signed(shl_ln_fu_1874_p3);

assign sext_ln1118_936_fu_1892_p1 = $signed(shl_ln1118_s_fu_1885_p3);

assign sext_ln1118_937_fu_2263_p1 = $signed(trunc_ln708_1183_reg_2555);

assign sext_ln1118_944_fu_2272_p1 = $signed(trunc_ln708_1189_reg_2585);

assign sext_ln1118_948_fu_2055_p1 = $signed(shl_ln1118_377_fu_2048_p3);

assign sext_ln1118_949_fu_2066_p1 = $signed(shl_ln1118_378_fu_2059_p3);

assign sext_ln1118_950_fu_2281_p1 = $signed(trunc_ln708_1194_reg_2610);

assign sext_ln703_543_fu_2317_p1 = $signed(add_ln703_1287_fu_2311_p2);

assign sext_ln703_544_fu_2354_p1 = $signed(add_ln703_1295_fu_2348_p2);

assign sext_ln703_fu_2287_p1 = $signed(trunc_ln708_1196_reg_2620);

assign sext_ln708_398_fu_2257_p1 = $signed(trunc_ln708_1181_reg_2545);

assign sext_ln708_399_fu_2260_p1 = $signed(trunc_ln708_1182_reg_2550);

assign sext_ln708_400_fu_2266_p1 = $signed(trunc_ln708_1186_reg_2570);

assign sext_ln708_401_fu_2269_p1 = $signed(trunc_ln708_1187_reg_2575);

assign sext_ln708_402_fu_2275_p1 = $signed(trunc_ln708_1190_reg_2590);

assign sext_ln708_403_fu_2278_p1 = $signed(trunc_ln708_1192_reg_2600);

assign sext_ln708_404_fu_2284_p1 = $signed(trunc_ln708_1195_reg_2615);

assign sext_ln708_fu_2254_p1 = $signed(trunc_ln_reg_2535);

assign shl_ln1118_377_fu_2048_p3 = {{kernel_data_V_7_ret_reg_2516}, {4'd0}};

assign shl_ln1118_378_fu_2059_p3 = {{kernel_data_V_7_ret_reg_2516}, {2'd0}};

assign shl_ln1118_s_fu_1885_p3 = {{kernel_data_V_2_ret_reg_2494}, {1'd0}};

assign shl_ln_fu_1874_p3 = {{kernel_data_V_2_ret_reg_2494}, {4'd0}};

assign start_out = real_start;

assign sub_ln1118_262_fu_2070_p2 = ($signed(sext_ln1118_949_fu_2066_p1) - $signed(sext_ln1118_948_fu_2055_p1));

assign sub_ln1118_fu_1896_p2 = ($signed(sext_ln1118_935_fu_1881_p1) - $signed(sext_ln1118_936_fu_1892_p1));

assign tmp_2_fu_1780_p4 = {{pX_loc_1_fu_188[31:1]}};

assign tmp_fu_1764_p4 = {{pY_loc_1_fu_196[31:1]}};

endmodule //conv_2d_cl_array_array_ap_fixed_2u_config2_s
